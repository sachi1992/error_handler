{"ast":null,"code":"import { WINDOW } from '../../types.js';\nimport { generateUniqueID } from './generateUniqueID.js';\nimport { getActivationStart } from './getActivationStart.js';\nimport { getNavigationEntry } from './getNavigationEntry.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst initMetric = (name, value) => {\n  const navEntry = getNavigationEntry();\n  let navigationType = 'navigate';\n  if (navEntry) {\n    if (WINDOW.document.prerendering || getActivationStart() > 0) {\n      navigationType = 'prerender';\n    } else {\n      navigationType = navEntry.type.replace(/_/g, '-');\n    }\n  }\n  return {\n    name,\n    value: typeof value === 'undefined' ? -1 : value,\n    rating: 'good',\n    // Will be updated if the value changes.\n    delta: 0,\n    entries: [],\n    id: generateUniqueID(),\n    navigationType\n  };\n};\nexport { initMetric };","map":{"version":3,"names":["initMetric","name","value","navEntry","getNavigationEntry","navigationType","WINDOW","document","prerendering","getActivationStart","type","replace","rating","delta","entries","id","generateUniqueID"],"sources":["/Users/amandawarnakula/ParkwayLabs/TestApplications/error_handling/node_modules/@sentry-internal/src/browser/web-vitals/lib/initMetric.ts"],"sourcesContent":["/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport type { Metric } from '../types';\nimport { generateUniqueID } from './generateUniqueID';\nimport { getActivationStart } from './getActivationStart';\nimport { getNavigationEntry } from './getNavigationEntry';\n\nexport const initMetric = (name: Metric['name'], value?: number): Metric => {\n  const navEntry = getNavigationEntry();\n  let navigationType: Metric['navigationType'] = 'navigate';\n\n  if (navEntry) {\n    if (WINDOW.document.prerendering || getActivationStart() > 0) {\n      navigationType = 'prerender';\n    } else {\n      navigationType = navEntry.type.replace(/_/g, '-') as Metric['navigationType'];\n    }\n  }\n\n  return {\n    name,\n    value: typeof value === 'undefined' ? -1 : value,\n    rating: 'good', // Will be updated if the value changes.\n    delta: 0,\n    entries: [],\n    id: generateUniqueID(),\n    navigationType,\n  };\n};\n"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAQaA,UAAW,GAAEA,CAACC,IAAI,EAAkBC,KAAK,KAAsB;EAC1E,MAAMC,QAAA,GAAWC,kBAAkB,EAAE;EACrC,IAAIC,cAAc,GAA6B,UAAU;EAEzD,IAAIF,QAAQ,EAAE;IACZ,IAAIG,MAAM,CAACC,QAAQ,CAACC,YAAa,IAAGC,kBAAkB,EAAG,GAAE,CAAC,EAAE;MAC5DJ,cAAA,GAAiB,WAAW;IAClC,OAAW;MACLA,cAAA,GAAiBF,QAAQ,CAACO,IAAI,CAACC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAE;IACxD;EACA;EAEE,OAAO;IACLV,IAAI;IACJC,KAAK,EAAE,OAAOA,KAAM,KAAI,cAAc,CAAC,CAAE,GAAEA,KAAK;IAChDU,MAAM,EAAE,MAAM;IAAA;IACdC,KAAK,EAAE,CAAC;IACRC,OAAO,EAAE,EAAE;IACXC,EAAE,EAAEC,gBAAgB,EAAE;IACtBX;EACJ,CAAG;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}