{"ast":null,"code":"import { convertIntegrationFnToClass, defineIntegration } from '../integration.js';\nimport { BrowserMetricsAggregator } from './browser-aggregator.js';\nconst INTEGRATION_NAME = 'MetricsAggregator';\nconst _metricsAggregatorIntegration = () => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {},\n    // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      client.metricsAggregator = new BrowserMetricsAggregator(client);\n    }\n  };\n};\nconst metricsAggregatorIntegration = defineIntegration(_metricsAggregatorIntegration);\n\n/**\n * Enables Sentry metrics monitoring.\n *\n * @experimental This API is experimental and might having breaking changes in the future.\n * @deprecated Use `metricsAggegratorIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst MetricsAggregator = convertIntegrationFnToClass(INTEGRATION_NAME, metricsAggregatorIntegration);\nexport { MetricsAggregator, metricsAggregatorIntegration };","map":{"version":3,"names":["INTEGRATION_NAME","_metricsAggregatorIntegration","name","setupOnce","setup","client","metricsAggregator","BrowserMetricsAggregator","metricsAggregatorIntegration","defineIntegration","MetricsAggregator","convertIntegrationFnToClass"],"sources":["/Users/amandawarnakula/ParkwayLabs/TestApplications/error_handling/node_modules/@sentry/src/metrics/integration.ts"],"sourcesContent":["import type { Client, ClientOptions, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport type { BaseClient } from '../baseclient';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration';\nimport { BrowserMetricsAggregator } from './browser-aggregator';\n\nconst INTEGRATION_NAME = 'MetricsAggregator';\n\nconst _metricsAggregatorIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client: BaseClient<ClientOptions>) {\n      client.metricsAggregator = new BrowserMetricsAggregator(client);\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const metricsAggregatorIntegration = defineIntegration(_metricsAggregatorIntegration);\n\n/**\n * Enables Sentry metrics monitoring.\n *\n * @experimental This API is experimental and might having breaking changes in the future.\n * @deprecated Use `metricsAggegratorIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const MetricsAggregator = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  metricsAggregatorIntegration,\n) as IntegrationClass<Integration & { setup: (client: Client) => void }>;\n"],"mappings":";;AAKA,MAAMA,gBAAA,GAAmB,mBAAmB;AAE5C,MAAMC,6BAA8B,GAAGA,CAAA,KAAM;EAC3C,OAAO;IACLC,IAAI,EAAEF,gBAAgB;IAC1B;IACIG,SAASA,CAAA,EAAG,EAAE;IAAA;IACdC,KAAKA,CAACC,MAAM,EAA6B;MACvCA,MAAM,CAACC,iBAAkB,GAAE,IAAIC,wBAAwB,CAACF,MAAM,CAAC;IACrE;EACA,CAAG;AACH,CAAG;MAEUG,4BAA6B,GAAEC,iBAAiB,CAACR,6BAA6B;;AAE3F;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMS,iBAAkB,GAAEC,2BAA2B,CAC1DX,gBAAgB,EAChBQ,4BACF,CAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}