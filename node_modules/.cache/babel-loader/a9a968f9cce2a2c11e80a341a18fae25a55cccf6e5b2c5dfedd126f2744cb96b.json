{"ast":null,"code":"import { _optionalChain } from '@sentry/utils';\nimport { loadModule, logger, fill, isThenable } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../../common/debug-build.js';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils.js';\n\n/** Tracing integration for graphql package */\nclass GraphQL {\n  /**\n   * @inheritDoc\n   */\n  static __initStatic() {\n    this.id = 'GraphQL';\n  }\n\n  /**\n   * @inheritDoc\n   */\n\n  constructor() {\n    this.name = GraphQL.id;\n  }\n\n  /** @inheritdoc */\n  loadDependency() {\n    return this._module = this._module || loadModule('graphql/execution/execute.js');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setupOnce(_, getCurrentHub) {\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      DEBUG_BUILD && logger.log('GraphQL Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n    const pkg = this.loadDependency();\n    if (!pkg) {\n      DEBUG_BUILD && logger.error('GraphQL Integration was unable to require graphql/execution package.');\n      return;\n    }\n    fill(pkg, 'execute', function (orig) {\n      return function (...args) {\n        // eslint-disable-next-line deprecation/deprecation\n        const scope = getCurrentHub().getScope();\n        // eslint-disable-next-line deprecation/deprecation\n        const parentSpan = scope.getSpan();\n\n        // eslint-disable-next-line deprecation/deprecation\n        const span = _optionalChain([parentSpan, 'optionalAccess', _2 => _2.startChild, 'call', _3 => _3({\n          description: 'execute',\n          op: 'graphql.execute',\n          origin: 'auto.graphql.graphql'\n        })]);\n\n        // eslint-disable-next-line deprecation/deprecation\n        _optionalChain([scope, 'optionalAccess', _4 => _4.setSpan, 'call', _5 => _5(span)]);\n        const rv = orig.call(this, ...args);\n        if (isThenable(rv)) {\n          return rv.then(res => {\n            _optionalChain([span, 'optionalAccess', _6 => _6.end, 'call', _7 => _7()]);\n            // eslint-disable-next-line deprecation/deprecation\n            _optionalChain([scope, 'optionalAccess', _8 => _8.setSpan, 'call', _9 => _9(parentSpan)]);\n            return res;\n          });\n        }\n        _optionalChain([span, 'optionalAccess', _10 => _10.end, 'call', _11 => _11()]);\n        // eslint-disable-next-line deprecation/deprecation\n        _optionalChain([scope, 'optionalAccess', _12 => _12.setSpan, 'call', _13 => _13(parentSpan)]);\n        return rv;\n      };\n    });\n  }\n}\nGraphQL.__initStatic();\nexport { GraphQL };","map":{"version":3,"names":["GraphQL","__initStatic","id","constructor","name","loadDependency","_module","loadModule","setupOnce","_","getCurrentHub","shouldDisableAutoInstrumentation","DEBUG_BUILD","logger","log","pkg","error","fill","orig","args","scope","getScope","parentSpan","getSpan","span","_optionalChain","_2","startChild","_3","description","op","origin","_4","setSpan","_5","rv","call","isThenable","then","res","_6","end","_7","_8","_9","_10","_11","_12","_13"],"sources":["/Users/amandawarnakula/ParkwayLabs/TestApplications/error_handling/node_modules/@sentry-internal/src/node/integrations/graphql.ts"],"sourcesContent":["import type { Hub } from '@sentry/core';\nimport type { EventProcessor } from '@sentry/types';\nimport { fill, isThenable, loadModule, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../../common/debug-build';\nimport type { LazyLoadedIntegration } from './lazy';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils';\n\ntype GraphQLModule = {\n  [method: string]: (...args: unknown[]) => unknown;\n};\n\n/** Tracing integration for graphql package */\nexport class GraphQL implements LazyLoadedIntegration<GraphQLModule> {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'GraphQL';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string;\n\n  private _module?: GraphQLModule;\n\n  public constructor() {\n    this.name = GraphQL.id;\n  }\n\n  /** @inheritdoc */\n  public loadDependency(): GraphQLModule | undefined {\n    return (this._module = this._module || loadModule('graphql/execution/execute.js'));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      DEBUG_BUILD && logger.log('GraphQL Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const pkg = this.loadDependency();\n\n    if (!pkg) {\n      DEBUG_BUILD && logger.error('GraphQL Integration was unable to require graphql/execution package.');\n      return;\n    }\n\n    fill(pkg, 'execute', function (orig: () => void | Promise<unknown>) {\n      return function (this: unknown, ...args: unknown[]) {\n        // eslint-disable-next-line deprecation/deprecation\n        const scope = getCurrentHub().getScope();\n        // eslint-disable-next-line deprecation/deprecation\n        const parentSpan = scope.getSpan();\n\n        // eslint-disable-next-line deprecation/deprecation\n        const span = parentSpan?.startChild({\n          description: 'execute',\n          op: 'graphql.execute',\n          origin: 'auto.graphql.graphql',\n        });\n\n        // eslint-disable-next-line deprecation/deprecation\n        scope?.setSpan(span);\n\n        const rv = orig.call(this, ...args);\n\n        if (isThenable(rv)) {\n          return rv.then((res: unknown) => {\n            span?.end();\n            // eslint-disable-next-line deprecation/deprecation\n            scope?.setSpan(parentSpan);\n\n            return res;\n          });\n        }\n\n        span?.end();\n        // eslint-disable-next-line deprecation/deprecation\n        scope?.setSpan(parentSpan);\n        return rv;\n      };\n    });\n  }\n}\n"],"mappings":";;;;;AAYA;AACO,MAAMA,OAAA,CAAwD;EACrE;;;EAGS,OAAAC,aAAA;IAAA,KAAOC,EAAA,GAAa;EAAS;;EAEtC;;;;EAOSC,WAAWA,CAAA,EAAG;IACnB,IAAI,CAACC,IAAA,GAAOJ,OAAO,CAACE,EAAE;EACxB;;EAEF;EACSG,cAAcA,CAAA,EAA8B;IACjD,OAAQ,IAAI,CAACC,OAAA,GAAU,IAAI,CAACA,OAAA,IAAWC,UAAU,CAAC,8BAA8B,CAAC;EACnF;;EAEF;;;EAGSC,SAASA,CAACC,CAAC,EAAsCC,aAAa,EAAmB;IACtF,IAAIC,gCAAgC,CAACD,aAAa,CAAC,EAAE;MACnDE,WAAA,IAAeC,MAAM,CAACC,GAAG,CAAC,uEAAuE,CAAC;MAClG;IACF;IAEA,MAAMC,GAAI,GAAE,IAAI,CAACV,cAAc,EAAE;IAEjC,IAAI,CAACU,GAAG,EAAE;MACRH,WAAA,IAAeC,MAAM,CAACG,KAAK,CAAC,sEAAsE,CAAC;MACnG;IACF;IAEAC,IAAI,CAACF,GAAG,EAAE,SAAS,EAAE,UAAUG,IAAI,EAAiC;MAClE,OAAO,UAAyB,GAAGC,IAAI,EAAa;QAC1D;QACQ,MAAMC,KAAA,GAAQV,aAAa,EAAE,CAACW,QAAQ,EAAE;QAChD;QACQ,MAAMC,UAAW,GAAEF,KAAK,CAACG,OAAO,EAAE;;QAE1C;QACQ,MAAMC,IAAA,GAAKC,cAAA,EAAEH,UAAU,oBAAAI,EAAA,IAAAA,EAAA,CAAEC,UAAU,EAAC,QAAAC,EAAA,IAAAA,EAAA;UAClCC,WAAW,EAAE,SAAS;UACtBC,EAAE,EAAE,iBAAiB;UACrBC,MAAM,EAAE;QACT,EAAC;;QAEV;QACAN,cAAA,EAAQL,KAAK,oBAAAY,EAAA,IAAAA,EAAA,CAAEC,OAAO,UAAAC,EAAA,IAAAA,EAAA,CAACV,IAAI,CAAC;QAEpB,MAAMW,EAAA,GAAKjB,IAAI,CAACkB,IAAI,CAAC,IAAI,EAAE,GAAGjB,IAAI,CAAC;QAEnC,IAAIkB,UAAU,CAACF,EAAE,CAAC,EAAE;UAClB,OAAOA,EAAE,CAACG,IAAI,CAAEC,GAAG,IAAc;YAC3Cd,cAAA,EAAYD,IAAI,oBAAAgB,EAAA,IAAAA,EAAA,CAAEC,GAAG,UAAAC,EAAA,IAAAA,EAAA,EAAE;YACvB;YACAjB,cAAA,EAAYL,KAAK,oBAAAuB,EAAA,IAAAA,EAAA,CAAEV,OAAO,UAAAW,EAAA,IAAAA,EAAA,CAACtB,UAAU,CAAC;YAE1B,OAAOiB,GAAG;UACtB,CAAW,CAAC;QACJ;QAERd,cAAA,EAAQD,IAAI,oBAAAqB,GAAA,IAAAA,GAAA,CAAEJ,GAAG,UAAAK,GAAA,IAAAA,GAAA,EAAE;QACnB;QACArB,cAAA,EAAQL,KAAK,oBAAA2B,GAAA,IAAAA,GAAA,CAAEd,OAAO,UAAAe,GAAA,IAAAA,GAAA,CAAC1B,UAAU,CAAC;QAC1B,OAAOa,EAAE;MACjB,CAAO;IACP,CAAK,CAAC;EACJ;AACF;AAAAnC,OAAA,CAAAC,YAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}