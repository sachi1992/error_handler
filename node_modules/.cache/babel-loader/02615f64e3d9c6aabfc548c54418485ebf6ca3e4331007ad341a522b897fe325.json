{"ast":null,"code":"import { defineIntegration, convertIntegrationFnToClass } from '@sentry/core';\nimport { applyAggregateErrorsToEvent } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder.js';\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\nconst INTEGRATION_NAME = 'LinkedErrors';\nconst _linkedErrorsIntegration = (options = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {},\n    // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n      applyAggregateErrorsToEvent(\n      // This differs from the LinkedErrors integration in core by using a different exceptionFromError function\n      exceptionFromError, options.stackParser, options.maxValueLength, key, limit, event, hint);\n    }\n  };\n};\nconst linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n\n/**\n * Aggregrate linked errors in an event.\n * @deprecated Use `linkedErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst LinkedErrors = convertIntegrationFnToClass(INTEGRATION_NAME, linkedErrorsIntegration);\nexport { LinkedErrors, linkedErrorsIntegration };","map":{"version":3,"names":["DEFAULT_KEY","DEFAULT_LIMIT","INTEGRATION_NAME","_linkedErrorsIntegration","options","limit","key","name","setupOnce","preprocessEvent","event","hint","client","getOptions","applyAggregateErrorsToEvent","exceptionFromError","stackParser","maxValueLength","linkedErrorsIntegration","defineIntegration","LinkedErrors","convertIntegrationFnToClass"],"sources":["/Users/amandawarnakula/ParkwayLabs/TestApplications/error_handling/node_modules/src/integrations/linkederrors.ts"],"sourcesContent":["import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Client, Event, EventHint, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport { applyAggregateErrorsToEvent } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder';\n\ninterface LinkedErrorsOptions {\n  key?: string;\n  limit?: number;\n}\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options: LinkedErrorsOptions = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      applyAggregateErrorsToEvent(\n        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function\n        exceptionFromError,\n        options.stackParser,\n        options.maxValueLength,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n\n/**\n * Aggregrate linked errors in an event.\n * @deprecated Use `linkedErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const LinkedErrors = convertIntegrationFnToClass(INTEGRATION_NAME, linkedErrorsIntegration) as IntegrationClass<\n  Integration & { preprocessEvent: (event: Event, hint: EventHint, client: Client) => void }\n> & { new (options?: { key?: string; limit?: number }): Integration };\n"],"mappings":";;;AAUA,MAAMA,WAAA,GAAc,OAAO;AAC3B,MAAMC,aAAA,GAAgB,CAAC;AAEvB,MAAMC,gBAAA,GAAmB,cAAc;AAEvC,MAAMC,wBAAA,GAA4BA,CAACC,OAAO,GAAwB,EAAE,KAAK;EACvE,MAAMC,KAAM,GAAED,OAAO,CAACC,KAAA,IAASJ,aAAa;EAC5C,MAAMK,GAAI,GAAEF,OAAO,CAACE,GAAA,IAAON,WAAW;EAEtC,OAAO;IACLO,IAAI,EAAEL,gBAAgB;IAC1B;IACIM,SAASA,CAAA,EAAG,EAAE;IAAA;IACdC,eAAeA,CAACC,KAAK,EAAEC,IAAI,EAAEC,MAAM,EAAE;MACnC,MAAMR,OAAQ,GAAEQ,MAAM,CAACC,UAAU,EAAE;MAEnCC,2BAA2B;MACjC;MACQC,kBAAkB,EAClBX,OAAO,CAACY,WAAW,EACnBZ,OAAO,CAACa,cAAc,EACtBX,GAAG,EACHD,KAAK,EACLK,KAAK,EACLC,IACR,CAAO;IACP;EACA,CAAG;AACH,CAAG;MAEUO,uBAAwB,GAAEC,iBAAiB,CAAChB,wBAAwB;;AAEjF;AACA;AACA;AACA;AACA;AACO,MAAMiB,YAAA,GAAeC,2BAA2B,CAACnB,gBAAgB,EAAEgB,uBAAuB,CAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}