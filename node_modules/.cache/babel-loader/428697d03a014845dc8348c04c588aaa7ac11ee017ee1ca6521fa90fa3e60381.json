{"ast":null,"code":"import { defineIntegration, convertIntegrationFnToClass } from '@sentry/core';\nimport { WINDOW } from '../helpers.js';\nconst INTEGRATION_NAME = 'HttpContext';\nconst _httpContextIntegration = () => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {},\n    // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event) {\n      // if none of the information we want exists, don't bother\n      if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n        return;\n      }\n\n      // grab as much info as exists and add it to the event\n      const url = event.request && event.request.url || WINDOW.location && WINDOW.location.href;\n      const {\n        referrer\n      } = WINDOW.document || {};\n      const {\n        userAgent\n      } = WINDOW.navigator || {};\n      const headers = {\n        ...(event.request && event.request.headers),\n        ...(referrer && {\n          Referer: referrer\n        }),\n        ...(userAgent && {\n          'User-Agent': userAgent\n        })\n      };\n      const request = {\n        ...event.request,\n        ...(url && {\n          url\n        }),\n        headers\n      };\n      event.request = request;\n    }\n  };\n};\nconst httpContextIntegration = defineIntegration(_httpContextIntegration);\n\n/**\n * HttpContext integration collects information about HTTP request headers.\n * @deprecated Use `httpContextIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst HttpContext = convertIntegrationFnToClass(INTEGRATION_NAME, httpContextIntegration);\nexport { HttpContext, httpContextIntegration };","map":{"version":3,"names":["INTEGRATION_NAME","_httpContextIntegration","name","setupOnce","preprocessEvent","event","WINDOW","navigator","location","document","url","request","href","referrer","userAgent","headers","Referer","httpContextIntegration","defineIntegration","HttpContext","convertIntegrationFnToClass"],"sources":["/Users/amandawarnakula/ParkwayLabs/TestApplications/error_handling/node_modules/src/integrations/httpcontext.ts"],"sourcesContent":["import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Event, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\n\nimport { WINDOW } from '../helpers';\n\nconst INTEGRATION_NAME = 'HttpContext';\n\nconst _httpContextIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event) {\n      // if none of the information we want exists, don't bother\n      if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n        return;\n      }\n\n      // grab as much info as exists and add it to the event\n      const url = (event.request && event.request.url) || (WINDOW.location && WINDOW.location.href);\n      const { referrer } = WINDOW.document || {};\n      const { userAgent } = WINDOW.navigator || {};\n\n      const headers = {\n        ...(event.request && event.request.headers),\n        ...(referrer && { Referer: referrer }),\n        ...(userAgent && { 'User-Agent': userAgent }),\n      };\n      const request = { ...event.request, ...(url && { url }), headers };\n\n      event.request = request;\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const httpContextIntegration = defineIntegration(_httpContextIntegration);\n\n/**\n * HttpContext integration collects information about HTTP request headers.\n * @deprecated Use `httpContextIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const HttpContext = convertIntegrationFnToClass(INTEGRATION_NAME, httpContextIntegration) as IntegrationClass<\n  Integration & { preprocessEvent: (event: Event) => void }\n>;\n"],"mappings":";;AAKA,MAAMA,gBAAA,GAAmB,aAAa;AAEtC,MAAMC,uBAAwB,GAAGA,CAAA,KAAM;EACrC,OAAO;IACLC,IAAI,EAAEF,gBAAgB;IAC1B;IACIG,SAASA,CAAA,EAAG,EAAE;IAAA;IACdC,eAAeA,CAACC,KAAK,EAAE;MAC3B;MACM,IAAI,CAACC,MAAM,CAACC,SAAA,IAAa,CAACD,MAAM,CAACE,QAAA,IAAY,CAACF,MAAM,CAACG,QAAQ,EAAE;QAC7D;MACR;;MAEA;MACM,MAAMC,GAAI,GAAGL,KAAK,CAACM,OAAQ,IAAGN,KAAK,CAACM,OAAO,CAACD,GAAG,IAAMJ,MAAM,CAACE,QAAA,IAAYF,MAAM,CAACE,QAAQ,CAACI,IAAK;MAC7F,MAAM;QAAEC;MAAA,CAAW,GAAEP,MAAM,CAACG,QAAA,IAAY,EAAE;MAC1C,MAAM;QAAEK;MAAA,CAAY,GAAER,MAAM,CAACC,SAAA,IAAa,EAAE;MAE5C,MAAMQ,OAAA,GAAU;QACd,IAAIV,KAAK,CAACM,OAAA,IAAWN,KAAK,CAACM,OAAO,CAACI,OAAO,CAAC;QAC3C,IAAIF,QAAS,IAAG;UAAEG,OAAO,EAAEH;QAAS,CAAC,CAAC;QACtC,IAAIC,SAAU,IAAG;UAAE,YAAY,EAAEA;QAAU,CAAC;MACpD,CAAO;MACD,MAAMH,OAAQ,GAAE;QAAE,GAAGN,KAAK,CAACM,OAAO;QAAE,IAAID,GAAA,IAAO;UAAEA;QAAA,CAAK,CAAC;QAAEK;MAAA,CAAS;MAElEV,KAAK,CAACM,OAAQ,GAAEA,OAAO;IAC7B;EACA,CAAG;AACH,CAAG;MAEUM,sBAAuB,GAAEC,iBAAiB,CAACjB,uBAAuB;;AAE/E;AACA;AACA;AACA;AACA;AACO,MAAMkB,WAAA,GAAcC,2BAA2B,CAACpB,gBAAgB,EAAEiB,sBAAsB,CAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}