{"ast":null,"code":"import { createTransport } from '@sentry/core';\nimport { SyncPromise } from '@sentry/utils';\n\n/**\n * The DONE ready state for XmlHttpRequest\n *\n * Defining it here as a constant b/c XMLHttpRequest.DONE is not always defined\n * (e.g. during testing, it is `undefined`)\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState}\n */\nconst XHR_READYSTATE_DONE = 4;\n\n/**\n * Creates a Transport that uses the XMLHttpRequest API to send events to Sentry.\n */\nfunction makeXHRTransport(options) {\n  function makeRequest(request) {\n    return new SyncPromise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.onerror = reject;\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === XHR_READYSTATE_DONE) {\n          resolve({\n            statusCode: xhr.status,\n            headers: {\n              'x-sentry-rate-limits': xhr.getResponseHeader('X-Sentry-Rate-Limits'),\n              'retry-after': xhr.getResponseHeader('Retry-After')\n            }\n          });\n        }\n      };\n      xhr.open('POST', options.url);\n      for (const header in options.headers) {\n        if (Object.prototype.hasOwnProperty.call(options.headers, header)) {\n          xhr.setRequestHeader(header, options.headers[header]);\n        }\n      }\n      xhr.send(request.body);\n    });\n  }\n  return createTransport(options, makeRequest);\n}\nexport { makeXHRTransport };","map":{"version":3,"names":["XHR_READYSTATE_DONE","makeXHRTransport","options","makeRequest","request","SyncPromise","resolve","reject","xhr","XMLHttpRequest","onerror","onreadystatechange","readyState","statusCode","status","headers","getResponseHeader","open","url","header","Object","prototype","hasOwnProperty","call","setRequestHeader","send","body","createTransport"],"sources":["/Users/amandawarnakula/ParkwayLabs/TestApplications/error_handling/node_modules/src/transports/xhr.ts"],"sourcesContent":["import { createTransport } from '@sentry/core';\nimport type { Transport, TransportMakeRequestResponse, TransportRequest } from '@sentry/types';\nimport { SyncPromise } from '@sentry/utils';\n\nimport type { BrowserTransportOptions } from './types';\n\n/**\n * The DONE ready state for XmlHttpRequest\n *\n * Defining it here as a constant b/c XMLHttpRequest.DONE is not always defined\n * (e.g. during testing, it is `undefined`)\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState}\n */\nconst XHR_READYSTATE_DONE = 4;\n\n/**\n * Creates a Transport that uses the XMLHttpRequest API to send events to Sentry.\n */\nexport function makeXHRTransport(options: BrowserTransportOptions): Transport {\n  function makeRequest(request: TransportRequest): PromiseLike<TransportMakeRequestResponse> {\n    return new SyncPromise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n\n      xhr.onerror = reject;\n\n      xhr.onreadystatechange = (): void => {\n        if (xhr.readyState === XHR_READYSTATE_DONE) {\n          resolve({\n            statusCode: xhr.status,\n            headers: {\n              'x-sentry-rate-limits': xhr.getResponseHeader('X-Sentry-Rate-Limits'),\n              'retry-after': xhr.getResponseHeader('Retry-After'),\n            },\n          });\n        }\n      };\n\n      xhr.open('POST', options.url);\n\n      for (const header in options.headers) {\n        if (Object.prototype.hasOwnProperty.call(options.headers, header)) {\n          xhr.setRequestHeader(header, options.headers[header]);\n        }\n      }\n\n      xhr.send(request.body);\n    });\n  }\n\n  return createTransport(options, makeRequest);\n}\n"],"mappings":";;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,mBAAA,GAAsB,CAAC;;AAE7B;AACA;AACA;AACO,SAASC,gBAAgBA,CAACC,OAAO,EAAsC;EAC5E,SAASC,WAAWA,CAACC,OAAO,EAA+D;IACzF,OAAO,IAAIC,WAAW,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MAC1C,MAAMC,GAAI,GAAE,IAAIC,cAAc,EAAE;MAEhCD,GAAG,CAACE,OAAQ,GAAEH,MAAM;MAEpBC,GAAG,CAACG,kBAAmB,GAAE,MAAY;QACnC,IAAIH,GAAG,CAACI,UAAW,KAAIZ,mBAAmB,EAAE;UAC1CM,OAAO,CAAC;YACNO,UAAU,EAAEL,GAAG,CAACM,MAAM;YACtBC,OAAO,EAAE;cACP,sBAAsB,EAAEP,GAAG,CAACQ,iBAAiB,CAAC,sBAAsB,CAAC;cACrE,aAAa,EAAER,GAAG,CAACQ,iBAAiB,CAAC,aAAa;YAChE;UACA,CAAW,CAAC;QACZ;MACA,CAAO;MAEDR,GAAG,CAACS,IAAI,CAAC,MAAM,EAAEf,OAAO,CAACgB,GAAG,CAAC;MAE7B,KAAK,MAAMC,MAAA,IAAUjB,OAAO,CAACa,OAAO,EAAE;QACpC,IAAIK,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACrB,OAAO,CAACa,OAAO,EAAEI,MAAM,CAAC,EAAE;UACjEX,GAAG,CAACgB,gBAAgB,CAACL,MAAM,EAAEjB,OAAO,CAACa,OAAO,CAACI,MAAM,CAAC,CAAC;QAC/D;MACA;MAEMX,GAAG,CAACiB,IAAI,CAACrB,OAAO,CAACsB,IAAI,CAAC;IAC5B,CAAK,CAAC;EACN;EAEE,OAAOC,eAAe,CAACzB,OAAO,EAAEC,WAAW,CAAC;AAC9C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}