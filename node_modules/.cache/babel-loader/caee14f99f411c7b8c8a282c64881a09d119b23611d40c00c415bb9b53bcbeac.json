{"ast":null,"code":"/**\n * Checks whether given url points to Sentry server\n * @param url url to verify\n *\n * TODO(v8): Remove Hub fallback type\n */\nfunction isSentryRequestUrl(url, hubOrClient) {\n  const client = hubOrClient && isHub(hubOrClient) ?\n  // eslint-disable-next-line deprecation/deprecation\n  hubOrClient.getClient() : hubOrClient;\n  const dsn = client && client.getDsn();\n  const tunnel = client && client.getOptions().tunnel;\n  return checkDsn(url, dsn) || checkTunnel(url, tunnel);\n}\nfunction checkTunnel(url, tunnel) {\n  if (!tunnel) {\n    return false;\n  }\n  return removeTrailingSlash(url) === removeTrailingSlash(tunnel);\n}\nfunction checkDsn(url, dsn) {\n  return dsn ? url.includes(dsn.host) : false;\n}\nfunction removeTrailingSlash(str) {\n  return str[str.length - 1] === '/' ? str.slice(0, -1) : str;\n}\nfunction isHub(hubOrClient) {\n  // eslint-disable-next-line deprecation/deprecation\n  return hubOrClient.getClient !== undefined;\n}\nexport { isSentryRequestUrl };","map":{"version":3,"names":["isSentryRequestUrl","url","hubOrClient","client","isHub","getClient","dsn","getDsn","tunnel","getOptions","checkDsn","checkTunnel","removeTrailingSlash","includes","host","str","length","slice","undefined"],"sources":["/Users/amandawarnakula/ParkwayLabs/TestApplications/error_handling/node_modules/@sentry/src/utils/isSentryRequestUrl.ts"],"sourcesContent":["import type { Client, DsnComponents, Hub } from '@sentry/types';\n\n/**\n * Checks whether given url points to Sentry server\n * @param url url to verify\n *\n * TODO(v8): Remove Hub fallback type\n */\nexport function isSentryRequestUrl(url: string, hubOrClient: Hub | Client | undefined): boolean {\n  const client =\n    hubOrClient && isHub(hubOrClient)\n      ? // eslint-disable-next-line deprecation/deprecation\n        hubOrClient.getClient()\n      : hubOrClient;\n  const dsn = client && client.getDsn();\n  const tunnel = client && client.getOptions().tunnel;\n\n  return checkDsn(url, dsn) || checkTunnel(url, tunnel);\n}\n\nfunction checkTunnel(url: string, tunnel: string | undefined): boolean {\n  if (!tunnel) {\n    return false;\n  }\n\n  return removeTrailingSlash(url) === removeTrailingSlash(tunnel);\n}\n\nfunction checkDsn(url: string, dsn: DsnComponents | undefined): boolean {\n  return dsn ? url.includes(dsn.host) : false;\n}\n\nfunction removeTrailingSlash(str: string): string {\n  return str[str.length - 1] === '/' ? str.slice(0, -1) : str;\n}\n\nfunction isHub(hubOrClient: Hub | Client | undefined): hubOrClient is Hub {\n  // eslint-disable-next-line deprecation/deprecation\n  return (hubOrClient as Hub).getClient !== undefined;\n}\n"],"mappings":"AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,kBAAkBA,CAACC,GAAG,EAAUC,WAAW,EAAqC;EAC9F,MAAMC,MAAO,GACXD,WAAY,IAAGE,KAAK,CAACF,WAAW;EACpC;EACQA,WAAW,CAACG,SAAS,EAAC,GACtBH,WAAW;EACjB,MAAMI,GAAA,GAAMH,MAAA,IAAUA,MAAM,CAACI,MAAM,EAAE;EACrC,MAAMC,MAAO,GAAEL,MAAO,IAAGA,MAAM,CAACM,UAAU,EAAE,CAACD,MAAM;EAEnD,OAAOE,QAAQ,CAACT,GAAG,EAAEK,GAAG,CAAE,IAAGK,WAAW,CAACV,GAAG,EAAEO,MAAM,CAAC;AACvD;AAEA,SAASG,WAAWA,CAACV,GAAG,EAAUO,MAAM,EAA+B;EACrE,IAAI,CAACA,MAAM,EAAE;IACX,OAAO,KAAK;EAChB;EAEE,OAAOI,mBAAmB,CAACX,GAAG,MAAMW,mBAAmB,CAACJ,MAAM,CAAC;AACjE;AAEA,SAASE,QAAQA,CAACT,GAAG,EAAUK,GAAG,EAAsC;EACtE,OAAOA,GAAA,GAAML,GAAG,CAACY,QAAQ,CAACP,GAAG,CAACQ,IAAI,CAAE,GAAE,KAAK;AAC7C;AAEA,SAASF,mBAAmBA,CAACG,GAAG,EAAkB;EAChD,OAAOA,GAAG,CAACA,GAAG,CAACC,MAAO,GAAE,CAAC,MAAM,MAAMD,GAAG,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAE,GAAEF,GAAG;AAC7D;AAEA,SAASX,KAAKA,CAACF,WAAW,EAAgD;EAC1E;EACE,OAAQA,WAAA,CAAoBG,SAAA,KAAca,SAAS;AACrD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}