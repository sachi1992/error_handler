{"ast":null,"code":"import { _optionalChain } from '@sentry/utils';\nimport { loadModule, logger, fill } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../../common/debug-build.js';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils.js';\n\n/** Tracing integration for node-mysql package */\nclass Mysql {\n  /**\n   * @inheritDoc\n   */\n  static __initStatic() {\n    this.id = 'Mysql';\n  }\n\n  /**\n   * @inheritDoc\n   */\n\n  constructor() {\n    this.name = Mysql.id;\n  }\n\n  /** @inheritdoc */\n  loadDependency() {\n    return this._module = this._module || loadModule('mysql/lib/Connection.js');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setupOnce(_, getCurrentHub) {\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      DEBUG_BUILD && logger.log('Mysql Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n    const pkg = this.loadDependency();\n    if (!pkg) {\n      DEBUG_BUILD && logger.error('Mysql Integration was unable to require `mysql` package.');\n      return;\n    }\n    let mySqlConfig = undefined;\n    try {\n      pkg.prototype.connect = new Proxy(pkg.prototype.connect, {\n        apply(wrappingTarget, thisArg, args) {\n          if (!mySqlConfig) {\n            mySqlConfig = thisArg.config;\n          }\n          return wrappingTarget.apply(thisArg, args);\n        }\n      });\n    } catch (e) {\n      DEBUG_BUILD && logger.error('Mysql Integration was unable to instrument `mysql` config.');\n    }\n    function spanDataFromConfig() {\n      if (!mySqlConfig) {\n        return {};\n      }\n      return {\n        'server.address': mySqlConfig.host,\n        'server.port': mySqlConfig.port,\n        'db.user': mySqlConfig.user\n      };\n    }\n    function finishSpan(span) {\n      if (!span) {\n        return;\n      }\n      const data = spanDataFromConfig();\n      Object.keys(data).forEach(key => {\n        span.setAttribute(key, data[key]);\n      });\n      span.end();\n    }\n\n    // The original function will have one of these signatures:\n    //    function (callback) => void\n    //    function (options, callback) => void\n    //    function (options, values, callback) => void\n    fill(pkg, 'createQuery', function (orig) {\n      return function (options, values, callback) {\n        // eslint-disable-next-line deprecation/deprecation\n        const scope = getCurrentHub().getScope();\n        // eslint-disable-next-line deprecation/deprecation\n        const parentSpan = scope.getSpan();\n\n        // eslint-disable-next-line deprecation/deprecation\n        const span = _optionalChain([parentSpan, 'optionalAccess', _2 => _2.startChild, 'call', _3 => _3({\n          description: typeof options === 'string' ? options : options.sql,\n          op: 'db',\n          origin: 'auto.db.mysql',\n          data: {\n            'db.system': 'mysql'\n          }\n        })]);\n        if (typeof callback === 'function') {\n          return orig.call(this, options, values, function (err, result, fields) {\n            finishSpan(span);\n            callback(err, result, fields);\n          });\n        }\n        if (typeof values === 'function') {\n          return orig.call(this, options, function (err, result, fields) {\n            finishSpan(span);\n            values(err, result, fields);\n          });\n        }\n\n        // streaming, no callback!\n        const query = orig.call(this, options, values);\n        query.on('end', () => {\n          finishSpan(span);\n        });\n        return query;\n      };\n    });\n  }\n}\nMysql.__initStatic();\nexport { Mysql };","map":{"version":3,"names":["Mysql","__initStatic","id","constructor","name","loadDependency","_module","loadModule","setupOnce","_","getCurrentHub","shouldDisableAutoInstrumentation","DEBUG_BUILD","logger","log","pkg","error","mySqlConfig","undefined","prototype","connect","Proxy","apply","wrappingTarget","thisArg","args","config","e","spanDataFromConfig","host","port","user","finishSpan","span","data","Object","keys","forEach","key","setAttribute","end","fill","orig","options","values","callback","scope","getScope","parentSpan","getSpan","_optionalChain","_2","startChild","_3","description","sql","op","origin","call","err","result","fields","query","on"],"sources":["/Users/amandawarnakula/ParkwayLabs/TestApplications/error_handling/node_modules/@sentry-internal/src/node/integrations/mysql.ts"],"sourcesContent":["import type { Hub } from '@sentry/core';\nimport type { EventProcessor, Span } from '@sentry/types';\nimport { fill, loadModule, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../../common/debug-build';\nimport type { LazyLoadedIntegration } from './lazy';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils';\n\ninterface MysqlConnection {\n  prototype: {\n    connect: () => void;\n  };\n  createQuery: () => void;\n}\n\ninterface MysqlConnectionConfig {\n  host: string;\n  port: number;\n  user: string;\n}\n\n/** Tracing integration for node-mysql package */\nexport class Mysql implements LazyLoadedIntegration<MysqlConnection> {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Mysql';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string;\n\n  private _module?: MysqlConnection;\n\n  public constructor() {\n    this.name = Mysql.id;\n  }\n\n  /** @inheritdoc */\n  public loadDependency(): MysqlConnection | undefined {\n    return (this._module = this._module || loadModule('mysql/lib/Connection.js'));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      DEBUG_BUILD && logger.log('Mysql Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const pkg = this.loadDependency();\n\n    if (!pkg) {\n      DEBUG_BUILD && logger.error('Mysql Integration was unable to require `mysql` package.');\n      return;\n    }\n\n    let mySqlConfig: MysqlConnectionConfig | undefined = undefined;\n\n    try {\n      pkg.prototype.connect = new Proxy(pkg.prototype.connect, {\n        apply(wrappingTarget, thisArg: { config: MysqlConnectionConfig }, args) {\n          if (!mySqlConfig) {\n            mySqlConfig = thisArg.config;\n          }\n          return wrappingTarget.apply(thisArg, args);\n        },\n      });\n    } catch (e) {\n      DEBUG_BUILD && logger.error('Mysql Integration was unable to instrument `mysql` config.');\n    }\n\n    function spanDataFromConfig(): Record<string, string | number | undefined> {\n      if (!mySqlConfig) {\n        return {};\n      }\n      return {\n        'server.address': mySqlConfig.host,\n        'server.port': mySqlConfig.port,\n        'db.user': mySqlConfig.user,\n      };\n    }\n\n    function finishSpan(span: Span | undefined): void {\n      if (!span) {\n        return;\n      }\n\n      const data = spanDataFromConfig();\n      Object.keys(data).forEach(key => {\n        span.setAttribute(key, data[key]);\n      });\n\n      span.end();\n    }\n\n    // The original function will have one of these signatures:\n    //    function (callback) => void\n    //    function (options, callback) => void\n    //    function (options, values, callback) => void\n    fill(pkg, 'createQuery', function (orig: () => void) {\n      return function (this: unknown, options: unknown, values: unknown, callback: unknown) {\n        // eslint-disable-next-line deprecation/deprecation\n        const scope = getCurrentHub().getScope();\n        // eslint-disable-next-line deprecation/deprecation\n        const parentSpan = scope.getSpan();\n\n        // eslint-disable-next-line deprecation/deprecation\n        const span = parentSpan?.startChild({\n          description: typeof options === 'string' ? options : (options as { sql: string }).sql,\n          op: 'db',\n          origin: 'auto.db.mysql',\n          data: {\n            'db.system': 'mysql',\n          },\n        });\n\n        if (typeof callback === 'function') {\n          return orig.call(this, options, values, function (err: Error, result: unknown, fields: unknown) {\n            finishSpan(span);\n            callback(err, result, fields);\n          });\n        }\n\n        if (typeof values === 'function') {\n          return orig.call(this, options, function (err: Error, result: unknown, fields: unknown) {\n            finishSpan(span);\n            values(err, result, fields);\n          });\n        }\n\n        // streaming, no callback!\n        const query = orig.call(this, options, values) as { on: (event: string, callback: () => void) => void };\n\n        query.on('end', () => {\n          finishSpan(span);\n        });\n\n        return query;\n      };\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}