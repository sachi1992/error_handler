{"ast":null,"code":"import { browserTracingIntegration, WINDOW, startBrowserTracingPageLoadSpan, startBrowserTracingNavigationSpan } from '@sentry/browser';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, getActiveSpan, getRootSpan, spanToJSON } from '@sentry/core';\nimport { logger, getNumberOfUrlSegments } from '@sentry/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\nimport { DEBUG_BUILD } from './debug-build.js';\nconst _jsxFileName = \"/home/runner/work/sentry-javascript/sentry-javascript/packages/react/src/reactrouterv6.tsx\"; /* eslint-disable max-lines */\n\nlet activeTransaction;\nlet _useEffect;\nlet _useLocation;\nlet _useNavigationType;\nlet _createRoutesFromChildren;\nlet _matchRoutes;\nlet _customStartTransaction;\nlet _startTransactionOnLocationChange;\nlet _stripBasename = false;\n\n/**\n * A browser tracing integration that uses React Router v3 to instrument navigations.\n * Expects `history` (and optionally `routes` and `matchPath`) to be passed as options.\n */\nfunction reactRouterV6BrowserTracingIntegration(options) {\n  const integration = browserTracingIntegration({\n    ...options,\n    instrumentPageLoad: false,\n    instrumentNavigation: false\n  });\n  const {\n    useEffect,\n    useLocation,\n    useNavigationType,\n    createRoutesFromChildren,\n    matchRoutes,\n    stripBasename,\n    instrumentPageLoad = true,\n    instrumentNavigation = true\n  } = options;\n  return {\n    ...integration,\n    afterAllSetup(client) {\n      integration.afterAllSetup(client);\n      const startNavigationCallback = startSpanOptions => {\n        startBrowserTracingNavigationSpan(client, startSpanOptions);\n        return undefined;\n      };\n      const initPathName = WINDOW && WINDOW.location && WINDOW.location.pathname;\n      if (instrumentPageLoad && initPathName) {\n        startBrowserTracingPageLoadSpan(client, {\n          name: initPathName,\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n            [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.react.reactrouter_v6'\n          }\n        });\n      }\n      _useEffect = useEffect;\n      _useLocation = useLocation;\n      _useNavigationType = useNavigationType;\n      _matchRoutes = matchRoutes;\n      _createRoutesFromChildren = createRoutesFromChildren;\n      _stripBasename = stripBasename || false;\n      _customStartTransaction = startNavigationCallback;\n      _startTransactionOnLocationChange = instrumentNavigation;\n    }\n  };\n}\n\n/**\n * @deprecated Use `reactRouterV6BrowserTracingIntegration()` instead.\n */\nfunction reactRouterV6Instrumentation(useEffect, useLocation, useNavigationType, createRoutesFromChildren, matchRoutes, stripBasename) {\n  return (customStartTransaction, startTransactionOnPageLoad = true, startTransactionOnLocationChange = true) => {\n    const initPathName = WINDOW && WINDOW.location && WINDOW.location.pathname;\n    if (startTransactionOnPageLoad && initPathName) {\n      activeTransaction = customStartTransaction({\n        name: initPathName,\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n          [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.react.reactrouter_v6'\n        }\n      });\n    }\n    _useEffect = useEffect;\n    _useLocation = useLocation;\n    _useNavigationType = useNavigationType;\n    _matchRoutes = matchRoutes;\n    _createRoutesFromChildren = createRoutesFromChildren;\n    _stripBasename = stripBasename || false;\n    _customStartTransaction = customStartTransaction;\n    _startTransactionOnLocationChange = startTransactionOnLocationChange;\n  };\n}\n\n/**\n * Strip the basename from a pathname if exists.\n *\n * Vendored and modified from `react-router`\n * https://github.com/remix-run/react-router/blob/462bb712156a3f739d6139a0f14810b76b002df6/packages/router/utils.ts#L1038\n */\nfunction stripBasenameFromPathname(pathname, basename) {\n  if (!basename || basename === '/') {\n    return pathname;\n  }\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return pathname;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  const startIndex = basename.endsWith('/') ? basename.length - 1 : basename.length;\n  const nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== '/') {\n    // pathname does not start with basename/\n    return pathname;\n  }\n  return pathname.slice(startIndex) || '/';\n}\nfunction getNormalizedName(routes, location, branches, basename = '') {\n  if (!routes || routes.length === 0) {\n    return [_stripBasename ? stripBasenameFromPathname(location.pathname, basename) : location.pathname, 'url'];\n  }\n  let pathBuilder = '';\n  if (branches) {\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let x = 0; x < branches.length; x++) {\n      const branch = branches[x];\n      const route = branch.route;\n      if (route) {\n        // Early return if index route\n        if (route.index) {\n          return [_stripBasename ? stripBasenameFromPathname(branch.pathname, basename) : branch.pathname, 'route'];\n        }\n        const path = route.path;\n        if (path) {\n          const newPath = path[0] === '/' || pathBuilder[pathBuilder.length - 1] === '/' ? path : `/${path}`;\n          pathBuilder += newPath;\n          if (basename + branch.pathname === location.pathname) {\n            if (\n            // If the route defined on the element is something like\n            // <Route path=\"/stores/:storeId/products/:productId\" element={<div>Product</div>} />\n            // We should check against the branch.pathname for the number of / seperators\n            getNumberOfUrlSegments(pathBuilder) !== getNumberOfUrlSegments(branch.pathname) &&\n            // We should not count wildcard operators in the url segments calculation\n            pathBuilder.slice(-2) !== '/*') {\n              return [(_stripBasename ? '' : basename) + newPath, 'route'];\n            }\n            return [(_stripBasename ? '' : basename) + pathBuilder, 'route'];\n          }\n        }\n      }\n    }\n  }\n  return [_stripBasename ? stripBasenameFromPathname(location.pathname, basename) : location.pathname, 'url'];\n}\nfunction updatePageloadTransaction(activeRootSpan, location, routes, matches, basename) {\n  const branches = Array.isArray(matches) ? matches : _matchRoutes(routes, location, basename);\n  if (activeRootSpan && branches) {\n    const [name, source] = getNormalizedName(routes, location, branches, basename);\n    activeRootSpan.updateName(name);\n    activeRootSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, source);\n  }\n}\nfunction handleNavigation(location, routes, navigationType, matches, basename) {\n  const branches = Array.isArray(matches) ? matches : _matchRoutes(routes, location, basename);\n  if (_startTransactionOnLocationChange && (navigationType === 'PUSH' || navigationType === 'POP') && branches) {\n    if (activeTransaction) {\n      activeTransaction.end();\n    }\n    const [name, source] = getNormalizedName(routes, location, branches, basename);\n    activeTransaction = _customStartTransaction({\n      name,\n      attributes: {\n        [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n        [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'navigation',\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.navigation.react.reactrouter_v6'\n      }\n    });\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withSentryReactRouterV6Routing(Routes) {\n  if (!_useEffect || !_useLocation || !_useNavigationType || !_createRoutesFromChildren || !_matchRoutes || !_customStartTransaction) {\n    DEBUG_BUILD && logger.warn(`reactRouterV6Instrumentation was unable to wrap Routes because of one or more missing parameters.\n      useEffect: ${_useEffect}. useLocation: ${_useLocation}. useNavigationType: ${_useNavigationType}.\n      createRoutesFromChildren: ${_createRoutesFromChildren}. matchRoutes: ${_matchRoutes}. customStartTransaction: ${_customStartTransaction}.`);\n    return Routes;\n  }\n  let isMountRenderPass = true;\n  const SentryRoutes = props => {\n    const location = _useLocation();\n    const navigationType = _useNavigationType();\n    _useEffect(() => {\n      const routes = _createRoutesFromChildren(props.children);\n      if (isMountRenderPass) {\n        updatePageloadTransaction(getActiveRootSpan(), location, routes);\n        isMountRenderPass = false;\n      } else {\n        handleNavigation(location, routes, navigationType);\n      }\n    },\n    // `props.children` is purpusely not included in the dependency array, because we do not want to re-run this effect\n    // when the children change. We only want to start transactions when the location or navigation type change.\n    [location, navigationType]);\n\n    // @ts-expect-error Setting more specific React Component typing for `R` generic above\n    // will break advanced type inference done by react router params\n    return React.createElement(Routes, {\n      ...props,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      }\n    });\n  };\n  hoistNonReactStatics(SentryRoutes, Routes);\n\n  // @ts-expect-error Setting more specific React Component typing for `R` generic above\n  // will break advanced type inference done by react router params\n  return SentryRoutes;\n}\nfunction wrapUseRoutes(origUseRoutes) {\n  if (!_useEffect || !_useLocation || !_useNavigationType || !_matchRoutes || !_customStartTransaction) {\n    DEBUG_BUILD && logger.warn('reactRouterV6Instrumentation was unable to wrap `useRoutes` because of one or more missing parameters.');\n    return origUseRoutes;\n  }\n  let isMountRenderPass = true;\n  const SentryRoutes = props => {\n    const {\n      routes,\n      locationArg\n    } = props;\n    const Routes = origUseRoutes(routes, locationArg);\n    const location = _useLocation();\n    const navigationType = _useNavigationType();\n\n    // A value with stable identity to either pick `locationArg` if available or `location` if not\n    const stableLocationParam = typeof locationArg === 'string' || locationArg && locationArg.pathname ? locationArg : location;\n    _useEffect(() => {\n      const normalizedLocation = typeof stableLocationParam === 'string' ? {\n        pathname: stableLocationParam\n      } : stableLocationParam;\n      if (isMountRenderPass) {\n        updatePageloadTransaction(getActiveRootSpan(), normalizedLocation, routes);\n        isMountRenderPass = false;\n      } else {\n        handleNavigation(normalizedLocation, routes, navigationType);\n      }\n    }, [navigationType, stableLocationParam]);\n    return Routes;\n  };\n\n  // eslint-disable-next-line react/display-name\n  return (routes, locationArg) => {\n    return React.createElement(SentryRoutes, {\n      routes: routes,\n      locationArg: locationArg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      }\n    });\n  };\n}\nfunction wrapCreateBrowserRouter(createRouterFunction) {\n  // `opts` for createBrowserHistory and createMemoryHistory are different, but also not relevant for us at the moment.\n  // `basename` is the only option that is relevant for us, and it is the same for all.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (routes, opts) {\n    const router = createRouterFunction(routes, opts);\n    const basename = opts && opts.basename;\n    const activeRootSpan = getActiveRootSpan();\n\n    // The initial load ends when `createBrowserRouter` is called.\n    // This is the earliest convenient time to update the transaction name.\n    // Callbacks to `router.subscribe` are not called for the initial load.\n    if (router.state.historyAction === 'POP' && activeRootSpan) {\n      updatePageloadTransaction(activeRootSpan, router.state.location, routes, undefined, basename);\n    }\n    router.subscribe(state => {\n      const location = state.location;\n      if (_startTransactionOnLocationChange && (state.historyAction === 'PUSH' || state.historyAction === 'POP')) {\n        handleNavigation(location, routes, state.historyAction, undefined, basename);\n      }\n    });\n    return router;\n  };\n}\nfunction getActiveRootSpan() {\n  // Legacy behavior for \"old\" react router instrumentation\n  if (activeTransaction) {\n    return activeTransaction;\n  }\n  const span = getActiveSpan();\n  const rootSpan = span ? getRootSpan(span) : undefined;\n  if (!rootSpan) {\n    return undefined;\n  }\n  const op = spanToJSON(rootSpan).op;\n\n  // Only use this root span if it is a pageload or navigation span\n  return op === 'navigation' || op === 'pageload' ? rootSpan : undefined;\n}\nexport { reactRouterV6BrowserTracingIntegration, reactRouterV6Instrumentation, withSentryReactRouterV6Routing, wrapCreateBrowserRouter, wrapUseRoutes };","map":{"version":3,"names":["_jsxFileName","activeTransaction","_useEffect","_useLocation","_useNavigationType","_createRoutesFromChildren","_matchRoutes","_customStartTransaction","_startTransactionOnLocationChange","_stripBasename","reactRouterV6BrowserTracingIntegration","options","integration","browserTracingIntegration","instrumentPageLoad","instrumentNavigation","useEffect","useLocation","useNavigationType","createRoutesFromChildren","matchRoutes","stripBasename","afterAllSetup","client","startNavigationCallback","startSpanOptions","startBrowserTracingNavigationSpan","undefined","initPathName","WINDOW","location","pathname","startBrowserTracingPageLoadSpan","name","attributes","SEMANTIC_ATTRIBUTE_SENTRY_SOURCE","SEMANTIC_ATTRIBUTE_SENTRY_OP","SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN","reactRouterV6Instrumentation","customStartTransaction","startTransactionOnPageLoad","startTransactionOnLocationChange","stripBasenameFromPathname","basename","toLowerCase","startsWith","startIndex","endsWith","length","nextChar","charAt","slice","getNormalizedName","routes","branches","pathBuilder","x","branch","route","index","path","newPath","getNumberOfUrlSegments","updatePageloadTransaction","activeRootSpan","matches","Array","isArray","source","updateName","setAttribute","handleNavigation","navigationType","end","withSentryReactRouterV6Routing","Routes","DEBUG_BUILD","logger","warn","isMountRenderPass","SentryRoutes","props","children","getActiveRootSpan","React","createElement","__self","__source","fileName","lineNumber","hoistNonReactStatics","wrapUseRoutes","origUseRoutes","locationArg","stableLocationParam","normalizedLocation","wrapCreateBrowserRouter","createRouterFunction","opts","router","state","historyAction","subscribe","span","getActiveSpan","rootSpan","getRootSpan","op","spanToJSON"],"sources":["/Users/amandawarnakula/ParkwayLabs/TestApplications/error_handling/node_modules/@sentry/src/reactrouterv6.tsx"],"sourcesContent":["/* eslint-disable max-lines */\n// Inspired from Donnie McNeal's solution:\n// https://gist.github.com/wontondon/e8c4bdf2888875e4c755712e99279536\n\nimport {\n  WINDOW,\n  browserTracingIntegration,\n  startBrowserTracingNavigationSpan,\n  startBrowserTracingPageLoadSpan,\n} from '@sentry/browser';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  getActiveSpan,\n  getRootSpan,\n  spanToJSON,\n} from '@sentry/core';\nimport type {\n  Integration,\n  Span,\n  StartSpanOptions,\n  Transaction,\n  TransactionContext,\n  TransactionSource,\n} from '@sentry/types';\nimport { getNumberOfUrlSegments, logger } from '@sentry/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport type {\n  Action,\n  AgnosticDataRouteMatch,\n  CreateRouterFunction,\n  CreateRoutesFromChildren,\n  Location,\n  MatchRoutes,\n  RouteMatch,\n  RouteObject,\n  Router,\n  RouterState,\n  UseEffect,\n  UseLocation,\n  UseNavigationType,\n  UseRoutes,\n} from './types';\n\nlet activeTransaction: Transaction | undefined;\n\nlet _useEffect: UseEffect;\nlet _useLocation: UseLocation;\nlet _useNavigationType: UseNavigationType;\nlet _createRoutesFromChildren: CreateRoutesFromChildren;\nlet _matchRoutes: MatchRoutes;\nlet _customStartTransaction: (context: TransactionContext) => Transaction | undefined;\nlet _startTransactionOnLocationChange: boolean;\nlet _stripBasename: boolean = false;\n\ninterface ReactRouterOptions {\n  useEffect: UseEffect;\n  useLocation: UseLocation;\n  useNavigationType: UseNavigationType;\n  createRoutesFromChildren: CreateRoutesFromChildren;\n  matchRoutes: MatchRoutes;\n  stripBasename?: boolean;\n}\n\n/**\n * A browser tracing integration that uses React Router v3 to instrument navigations.\n * Expects `history` (and optionally `routes` and `matchPath`) to be passed as options.\n */\nexport function reactRouterV6BrowserTracingIntegration(\n  options: Parameters<typeof browserTracingIntegration>[0] & ReactRouterOptions,\n): Integration {\n  const integration = browserTracingIntegration({\n    ...options,\n    instrumentPageLoad: false,\n    instrumentNavigation: false,\n  });\n\n  const {\n    useEffect,\n    useLocation,\n    useNavigationType,\n    createRoutesFromChildren,\n    matchRoutes,\n    stripBasename,\n    instrumentPageLoad = true,\n    instrumentNavigation = true,\n  } = options;\n\n  return {\n    ...integration,\n    afterAllSetup(client) {\n      integration.afterAllSetup(client);\n\n      const startNavigationCallback = (startSpanOptions: StartSpanOptions): undefined => {\n        startBrowserTracingNavigationSpan(client, startSpanOptions);\n        return undefined;\n      };\n\n      const initPathName = WINDOW && WINDOW.location && WINDOW.location.pathname;\n      if (instrumentPageLoad && initPathName) {\n        startBrowserTracingPageLoadSpan(client, {\n          name: initPathName,\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n            [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.react.reactrouter_v6',\n          },\n        });\n      }\n\n      _useEffect = useEffect;\n      _useLocation = useLocation;\n      _useNavigationType = useNavigationType;\n      _matchRoutes = matchRoutes;\n      _createRoutesFromChildren = createRoutesFromChildren;\n      _stripBasename = stripBasename || false;\n\n      _customStartTransaction = startNavigationCallback;\n      _startTransactionOnLocationChange = instrumentNavigation;\n    },\n  };\n}\n\n/**\n * @deprecated Use `reactRouterV6BrowserTracingIntegration()` instead.\n */\nexport function reactRouterV6Instrumentation(\n  useEffect: UseEffect,\n  useLocation: UseLocation,\n  useNavigationType: UseNavigationType,\n  createRoutesFromChildren: CreateRoutesFromChildren,\n  matchRoutes: MatchRoutes,\n  stripBasename?: boolean,\n) {\n  return (\n    customStartTransaction: (context: TransactionContext) => Transaction | undefined,\n    startTransactionOnPageLoad = true,\n    startTransactionOnLocationChange = true,\n  ): void => {\n    const initPathName = WINDOW && WINDOW.location && WINDOW.location.pathname;\n    if (startTransactionOnPageLoad && initPathName) {\n      activeTransaction = customStartTransaction({\n        name: initPathName,\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n          [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.react.reactrouter_v6',\n        },\n      });\n    }\n\n    _useEffect = useEffect;\n    _useLocation = useLocation;\n    _useNavigationType = useNavigationType;\n    _matchRoutes = matchRoutes;\n    _createRoutesFromChildren = createRoutesFromChildren;\n    _stripBasename = stripBasename || false;\n\n    _customStartTransaction = customStartTransaction;\n    _startTransactionOnLocationChange = startTransactionOnLocationChange;\n  };\n}\n\n/**\n * Strip the basename from a pathname if exists.\n *\n * Vendored and modified from `react-router`\n * https://github.com/remix-run/react-router/blob/462bb712156a3f739d6139a0f14810b76b002df6/packages/router/utils.ts#L1038\n */\nfunction stripBasenameFromPathname(pathname: string, basename: string): string {\n  if (!basename || basename === '/') {\n    return pathname;\n  }\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return pathname;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  const startIndex = basename.endsWith('/') ? basename.length - 1 : basename.length;\n  const nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== '/') {\n    // pathname does not start with basename/\n    return pathname;\n  }\n\n  return pathname.slice(startIndex) || '/';\n}\n\nfunction getNormalizedName(\n  routes: RouteObject[],\n  location: Location,\n  branches: RouteMatch[],\n  basename: string = '',\n): [string, TransactionSource] {\n  if (!routes || routes.length === 0) {\n    return [_stripBasename ? stripBasenameFromPathname(location.pathname, basename) : location.pathname, 'url'];\n  }\n\n  let pathBuilder = '';\n  if (branches) {\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let x = 0; x < branches.length; x++) {\n      const branch = branches[x];\n      const route = branch.route;\n      if (route) {\n        // Early return if index route\n        if (route.index) {\n          return [_stripBasename ? stripBasenameFromPathname(branch.pathname, basename) : branch.pathname, 'route'];\n        }\n\n        const path = route.path;\n        if (path) {\n          const newPath = path[0] === '/' || pathBuilder[pathBuilder.length - 1] === '/' ? path : `/${path}`;\n          pathBuilder += newPath;\n\n          if (basename + branch.pathname === location.pathname) {\n            if (\n              // If the route defined on the element is something like\n              // <Route path=\"/stores/:storeId/products/:productId\" element={<div>Product</div>} />\n              // We should check against the branch.pathname for the number of / seperators\n              getNumberOfUrlSegments(pathBuilder) !== getNumberOfUrlSegments(branch.pathname) &&\n              // We should not count wildcard operators in the url segments calculation\n              pathBuilder.slice(-2) !== '/*'\n            ) {\n              return [(_stripBasename ? '' : basename) + newPath, 'route'];\n            }\n            return [(_stripBasename ? '' : basename) + pathBuilder, 'route'];\n          }\n        }\n      }\n    }\n  }\n\n  return [_stripBasename ? stripBasenameFromPathname(location.pathname, basename) : location.pathname, 'url'];\n}\n\nfunction updatePageloadTransaction(\n  activeRootSpan: Span | undefined,\n  location: Location,\n  routes: RouteObject[],\n  matches?: AgnosticDataRouteMatch,\n  basename?: string,\n): void {\n  const branches = Array.isArray(matches)\n    ? matches\n    : (_matchRoutes(routes, location, basename) as unknown as RouteMatch[]);\n\n  if (activeRootSpan && branches) {\n    const [name, source] = getNormalizedName(routes, location, branches, basename);\n    activeRootSpan.updateName(name);\n    activeRootSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, source);\n  }\n}\n\nfunction handleNavigation(\n  location: Location,\n  routes: RouteObject[],\n  navigationType: Action,\n  matches?: AgnosticDataRouteMatch,\n  basename?: string,\n): void {\n  const branches = Array.isArray(matches) ? matches : _matchRoutes(routes, location, basename);\n\n  if (_startTransactionOnLocationChange && (navigationType === 'PUSH' || navigationType === 'POP') && branches) {\n    if (activeTransaction) {\n      activeTransaction.end();\n    }\n\n    const [name, source] = getNormalizedName(routes, location, branches, basename);\n    activeTransaction = _customStartTransaction({\n      name,\n      attributes: {\n        [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n        [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'navigation',\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.navigation.react.reactrouter_v6',\n      },\n    });\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function withSentryReactRouterV6Routing<P extends Record<string, any>, R extends React.FC<P>>(Routes: R): R {\n  if (\n    !_useEffect ||\n    !_useLocation ||\n    !_useNavigationType ||\n    !_createRoutesFromChildren ||\n    !_matchRoutes ||\n    !_customStartTransaction\n  ) {\n    DEBUG_BUILD &&\n      logger.warn(`reactRouterV6Instrumentation was unable to wrap Routes because of one or more missing parameters.\n      useEffect: ${_useEffect}. useLocation: ${_useLocation}. useNavigationType: ${_useNavigationType}.\n      createRoutesFromChildren: ${_createRoutesFromChildren}. matchRoutes: ${_matchRoutes}. customStartTransaction: ${_customStartTransaction}.`);\n\n    return Routes;\n  }\n\n  let isMountRenderPass: boolean = true;\n\n  const SentryRoutes: React.FC<P> = (props: P) => {\n    const location = _useLocation();\n    const navigationType = _useNavigationType();\n\n    _useEffect(\n      () => {\n        const routes = _createRoutesFromChildren(props.children) as RouteObject[];\n\n        if (isMountRenderPass) {\n          updatePageloadTransaction(getActiveRootSpan(), location, routes);\n          isMountRenderPass = false;\n        } else {\n          handleNavigation(location, routes, navigationType);\n        }\n      },\n      // `props.children` is purpusely not included in the dependency array, because we do not want to re-run this effect\n      // when the children change. We only want to start transactions when the location or navigation type change.\n      [location, navigationType],\n    );\n\n    // @ts-expect-error Setting more specific React Component typing for `R` generic above\n    // will break advanced type inference done by react router params\n    return <Routes {...props} />;\n  };\n\n  hoistNonReactStatics(SentryRoutes, Routes);\n\n  // @ts-expect-error Setting more specific React Component typing for `R` generic above\n  // will break advanced type inference done by react router params\n  return SentryRoutes;\n}\n\nexport function wrapUseRoutes(origUseRoutes: UseRoutes): UseRoutes {\n  if (!_useEffect || !_useLocation || !_useNavigationType || !_matchRoutes || !_customStartTransaction) {\n    DEBUG_BUILD &&\n      logger.warn(\n        'reactRouterV6Instrumentation was unable to wrap `useRoutes` because of one or more missing parameters.',\n      );\n\n    return origUseRoutes;\n  }\n\n  let isMountRenderPass: boolean = true;\n\n  const SentryRoutes: React.FC<{\n    children?: React.ReactNode;\n    routes: RouteObject[];\n    locationArg?: Partial<Location> | string;\n  }> = (props: { children?: React.ReactNode; routes: RouteObject[]; locationArg?: Partial<Location> | string }) => {\n    const { routes, locationArg } = props;\n\n    const Routes = origUseRoutes(routes, locationArg);\n\n    const location = _useLocation();\n    const navigationType = _useNavigationType();\n\n    // A value with stable identity to either pick `locationArg` if available or `location` if not\n    const stableLocationParam =\n      typeof locationArg === 'string' || (locationArg && locationArg.pathname)\n        ? (locationArg as { pathname: string })\n        : location;\n\n    _useEffect(() => {\n      const normalizedLocation =\n        typeof stableLocationParam === 'string' ? { pathname: stableLocationParam } : stableLocationParam;\n\n      if (isMountRenderPass) {\n        updatePageloadTransaction(getActiveRootSpan(), normalizedLocation, routes);\n        isMountRenderPass = false;\n      } else {\n        handleNavigation(normalizedLocation, routes, navigationType);\n      }\n    }, [navigationType, stableLocationParam]);\n\n    return Routes;\n  };\n\n  // eslint-disable-next-line react/display-name\n  return (routes: RouteObject[], locationArg?: Partial<Location> | string): React.ReactElement | null => {\n    return <SentryRoutes routes={routes} locationArg={locationArg} />;\n  };\n}\n\nexport function wrapCreateBrowserRouter<\n  TState extends RouterState = RouterState,\n  TRouter extends Router<TState> = Router<TState>,\n>(createRouterFunction: CreateRouterFunction<TState, TRouter>): CreateRouterFunction<TState, TRouter> {\n  // `opts` for createBrowserHistory and createMemoryHistory are different, but also not relevant for us at the moment.\n  // `basename` is the only option that is relevant for us, and it is the same for all.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (routes: RouteObject[], opts?: Record<string, any> & { basename?: string }): TRouter {\n    const router = createRouterFunction(routes, opts);\n    const basename = opts && opts.basename;\n\n    const activeRootSpan = getActiveRootSpan();\n\n    // The initial load ends when `createBrowserRouter` is called.\n    // This is the earliest convenient time to update the transaction name.\n    // Callbacks to `router.subscribe` are not called for the initial load.\n    if (router.state.historyAction === 'POP' && activeRootSpan) {\n      updatePageloadTransaction(activeRootSpan, router.state.location, routes, undefined, basename);\n    }\n\n    router.subscribe((state: RouterState) => {\n      const location = state.location;\n      if (_startTransactionOnLocationChange && (state.historyAction === 'PUSH' || state.historyAction === 'POP')) {\n        handleNavigation(location, routes, state.historyAction, undefined, basename);\n      }\n    });\n\n    return router;\n  };\n}\n\nfunction getActiveRootSpan(): Span | undefined {\n  // Legacy behavior for \"old\" react router instrumentation\n  if (activeTransaction) {\n    return activeTransaction;\n  }\n\n  const span = getActiveSpan();\n  const rootSpan = span ? getRootSpan(span) : undefined;\n\n  if (!rootSpan) {\n    return undefined;\n  }\n\n  const op = spanToJSON(rootSpan).op;\n\n  // Only use this root span if it is a pageload or navigation span\n  return op === 'navigation' || op === 'pageload' ? rootSpan : undefined;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}