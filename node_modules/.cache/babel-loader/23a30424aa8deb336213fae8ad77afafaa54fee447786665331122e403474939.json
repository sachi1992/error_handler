{"ast":null,"code":"var _jsxFileName = \"/Users/amandawarnakula/ParkwayLabs/TestApplications/error_handling/src/components/Example1.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { ErrorHandler\n// , CustomError\n} from \"../errorHandler\";\nimport CustomForm from \"./CustomForm\";\n// import { useErrorBoundary } from \"react-error-boundary\";\nimport Sample from \"./sample\";\nimport { object, number, boolean, string, date } from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Example1 = () => {\n  _s();\n  // const { showBoundary } = useErrorBoundary();\n\n  useEffect(() => {\n    // sentry\n    // setTimeout(() => {\n    //   // const error = new CustomError(\"formValidation\", \"crash Example1 page\");\n    //   // showBoundary(error);\n    //   throw new Error(\"crash Example1 page>>>>>\");\n    // }, 2);\n\n    // checkValid();\n    apiRequest();\n  }, []);\n  const checkValid = async () => {\n    const schema = object({\n      isBig: boolean(),\n      count: number().when(\"isBig\", (isBig, schema) => {\n        return isBig ? schema.min(5) : schema.min(0);\n      })\n    });\n\n    // Validate data against the schema\n    schema.validate({\n      isBig: false,\n      count: \"6\"\n    }).then(ab => {\n      console.log(\"ðŸš€ ~ useEffect ~ ab:\", ab);\n    }).catch(error => {\n      console.error(\"Validation failed:\", error);\n    });\n\n    // Define user schema\n    const userSchema = object({\n      name: string().required(),\n      age: number().required().positive().integer(),\n      email: string().email(),\n      website: string().url().nullable(),\n      createdOn: date().default(() => new Date())\n    });\n\n    // Simulate fetching user data and validate against user schema\n    const fetchUser = async () => {\n      // Simulated user data\n      return {\n        name: \"John Doe\",\n        age: 30,\n        email: \"john.doe@example.com\",\n        website: \"https://example.com\",\n        createdOn: new Date()\n      };\n    };\n\n    // Parse and validate user data\n    fetchUser().then(user => userSchema.validate(user)).then(validUser => {\n      console.log(\"ðŸš€ ~ checkValid ~ user:\", validUser);\n    }).catch(error => {\n      console.error(\"User data validation failed:\", error);\n    });\n    // const getError = () => {\n    //   setTimeout(() => {\n    //     throw new Error(\"crash Example1 page>>>>>\");\n    //   }, 2);\n    // };\n  };\n  const apiRequest = async () => {\n    fetch(\"https://api.example.com/data\").then(response => {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    }).then(data => {\n      // Handle successful API response\n      console.log(data);\n    }).catch(error => {\n      // Handle API errors\n      console.error(\"Error:\", error.message);\n      // Display error message to the user\n      alert(\"An error occurred while fetching data from the API.\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(ErrorHandler, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-3 gap-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-start-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Sample, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(CustomForm, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(Example1, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Example1;\nexport default Example1;\nvar _c;\n$RefreshReg$(_c, \"Example1\");","map":{"version":3,"names":["useEffect","ErrorHandler","CustomForm","Sample","object","number","boolean","string","date","jsxDEV","_jsxDEV","Example1","_s","apiRequest","checkValid","schema","isBig","count","when","min","validate","then","ab","console","log","catch","error","userSchema","name","required","age","positive","integer","email","website","url","nullable","createdOn","default","Date","fetchUser","user","validUser","fetch","response","ok","Error","json","data","message","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/amandawarnakula/ParkwayLabs/TestApplications/error_handling/src/components/Example1.tsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport {\n  ErrorHandler,\n  // , CustomError\n} from \"../errorHandler\";\nimport CustomForm from \"./CustomForm\";\n// import { useErrorBoundary } from \"react-error-boundary\";\nimport Sample from \"./sample\";\n\nimport { object, number, boolean, string, date } from \"yup\";\n\nconst Example1 = (): JSX.Element => {\n  // const { showBoundary } = useErrorBoundary();\n\n  useEffect(() => {\n    // sentry\n    // setTimeout(() => {\n    //   // const error = new CustomError(\"formValidation\", \"crash Example1 page\");\n    //   // showBoundary(error);\n    //   throw new Error(\"crash Example1 page>>>>>\");\n    // }, 2);\n\n    // checkValid();\n    apiRequest();\n  }, []);\n\n  const checkValid = async () => {\n    const schema = object({\n      isBig: boolean(),\n      count: number().when(\"isBig\", (isBig, schema) => {\n        return isBig ? schema.min(5) : schema.min(0);\n      }),\n    });\n\n    // Validate data against the schema\n    schema\n      .validate({ isBig: false, count: \"6\" })\n      .then((ab) => {\n        console.log(\"ðŸš€ ~ useEffect ~ ab:\", ab);\n      })\n      .catch((error) => {\n        console.error(\"Validation failed:\", error);\n      });\n\n    // Define user schema\n    const userSchema = object({\n      name: string().required(),\n      age: number().required().positive().integer(),\n      email: string().email(),\n      website: string().url().nullable(),\n      createdOn: date().default(() => new Date()),\n    });\n\n    // Simulate fetching user data and validate against user schema\n    const fetchUser = async () => {\n      // Simulated user data\n      return {\n        name: \"John Doe\",\n        age: 30,\n        email: \"john.doe@example.com\",\n        website: \"https://example.com\",\n        createdOn: new Date(),\n      };\n    };\n\n    // Parse and validate user data\n    fetchUser()\n      .then((user) => userSchema.validate(user))\n      .then((validUser) => {\n        console.log(\"ðŸš€ ~ checkValid ~ user:\", validUser);\n      })\n      .catch((error) => {\n        console.error(\"User data validation failed:\", error);\n      });\n    // const getError = () => {\n    //   setTimeout(() => {\n    //     throw new Error(\"crash Example1 page>>>>>\");\n    //   }, 2);\n    // };\n  };\n\n  const apiRequest = async () => {\n    fetch(\"https://api.example.com/data\")\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        // Handle successful API response\n        console.log(data);\n      })\n      .catch((error) => {\n        // Handle API errors\n        console.error(\"Error:\", error.message);\n        // Display error message to the user\n        alert(\"An error occurred while fetching data from the API.\");\n      });\n  };\n\n  return (\n    <ErrorHandler>\n      <div className=\"container\">\n        <div className=\"grid grid-cols-3 gap-4\">\n          <div className=\"col-start-1\">\n            <div>\n              <Sample />\n            </div>\n\n            <div>\n              <CustomForm />\n            </div>\n          </div>\n        </div>\n      </div>\n    </ErrorHandler>\n  );\n};\n\nexport default Example1;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}