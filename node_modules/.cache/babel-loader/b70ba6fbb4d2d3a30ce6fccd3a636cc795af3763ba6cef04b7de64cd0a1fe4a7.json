{"ast":null,"code":"import { isThenable } from './is.js';\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n/** SyncPromise internal states */\nvar States;\n(function (States) {\n  /** Pending */\n  const PENDING = 0;\n  States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  const RESOLVED = 1;\n  States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  const REJECTED = 2;\n  States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n  constructor(executor) {\n    SyncPromise.prototype.__init.call(this);\n    SyncPromise.prototype.__init2.call(this);\n    SyncPromise.prototype.__init3.call(this);\n    SyncPromise.prototype.__init4.call(this);\n    this._state = States.PENDING;\n    this._handlers = [];\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  then(onfulfilled, onrejected) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([false, result => {\n        if (!onfulfilled) {\n          // TODO: ¯\\_(ツ)_/¯\n          // TODO: FIXME\n          resolve(result);\n        } else {\n          try {\n            resolve(onfulfilled(result));\n          } catch (e) {\n            reject(e);\n          }\n        }\n      }, reason => {\n        if (!onrejected) {\n          reject(reason);\n        } else {\n          try {\n            resolve(onrejected(reason));\n          } catch (e) {\n            reject(e);\n          }\n        }\n      }]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n  catch(onrejected) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n      return this.then(value => {\n        isRejected = false;\n        val = value;\n        if (onfinally) {\n          onfinally();\n        }\n      }, reason => {\n        isRejected = true;\n        val = reason;\n        if (onfinally) {\n          onfinally();\n        }\n      }).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n        resolve(val);\n      });\n    });\n  }\n\n  /** JSDoc */\n  __init() {\n    this._resolve = value => {\n      this._setResult(States.RESOLVED, value);\n    };\n  }\n\n  /** JSDoc */\n  __init2() {\n    this._reject = reason => {\n      this._setResult(States.REJECTED, reason);\n    };\n  }\n\n  /** JSDoc */\n  __init3() {\n    this._setResult = (state, value) => {\n      if (this._state !== States.PENDING) {\n        return;\n      }\n      if (isThenable(value)) {\n        void value.then(this._resolve, this._reject);\n        return;\n      }\n      this._state = state;\n      this._value = value;\n      this._executeHandlers();\n    };\n  }\n\n  /** JSDoc */\n  __init4() {\n    this._executeHandlers = () => {\n      if (this._state === States.PENDING) {\n        return;\n      }\n      const cachedHandlers = this._handlers.slice();\n      this._handlers = [];\n      cachedHandlers.forEach(handler => {\n        if (handler[0]) {\n          return;\n        }\n        if (this._state === States.RESOLVED) {\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          handler[1](this._value);\n        }\n        if (this._state === States.REJECTED) {\n          handler[2](this._value);\n        }\n        handler[0] = true;\n      });\n    };\n  }\n}\nexport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise };","map":{"version":3,"names":["States","PENDING","RESOLVED","REJECTED","resolvedSyncPromise","value","SyncPromise","resolve","rejectedSyncPromise","reason","_","reject","constructor","executor","prototype","__init","call","__init2","__init3","__init4","_state","_handlers","_resolve","_reject","e","then","onfulfilled","onrejected","push","result","_executeHandlers","catch","val","finally","onfinally","isRejected","_setResult","state","isThenable","_value","cachedHandlers","slice","forEach","handler"],"sources":["/Users/amandawarnakula/ParkwayLabs/TestApplications/error_handling/node_modules/@sentry/src/syncpromise.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nconst enum States {\n  /** Pending */\n  PENDING = 0,\n  /** Resolved / OK */\n  RESOLVED = 1,\n  /** Rejected / Error */\n  REJECTED = 2,\n}\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\nexport function resolvedSyncPromise(): PromiseLike<void>;\nexport function resolvedSyncPromise<T>(value: T | PromiseLike<T>): PromiseLike<T>;\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nexport function resolvedSyncPromise<T>(value?: T | PromiseLike<T>): PromiseLike<T> {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nexport function rejectedSyncPromise<T = never>(reason?: any): PromiseLike<T> {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States;\n  private _handlers: Array<[boolean, (value: T) => void, (reason: any) => any]>;\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    this._state = States.PENDING;\n    this._handlers = [];\n\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val as unknown as any);\n      });\n    });\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value as unknown as any);\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };\n}\n\nexport { SyncPromise };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}