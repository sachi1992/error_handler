{"ast":null,"code":"import { browserTracingIntegration, startBrowserTracingPageLoadSpan, startBrowserTracingNavigationSpan, WINDOW } from '@sentry/browser';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, getActiveSpan, getRootSpan, spanToJSON } from '@sentry/core';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\nconst _jsxFileName = \"/home/runner/work/sentry-javascript/sentry-javascript/packages/react/src/reactrouter.tsx\";\n// We need to disable eslint no-explict-any because any is required for the\n// react-router typings.\n\nlet activeTransaction;\n\n/**\n * A browser tracing integration that uses React Router v4 to instrument navigations.\n * Expects `history` (and optionally `routes` and `matchPath`) to be passed as options.\n */\nfunction reactRouterV4BrowserTracingIntegration(options) {\n  const integration = browserTracingIntegration({\n    ...options,\n    instrumentPageLoad: false,\n    instrumentNavigation: false\n  });\n  const {\n    history,\n    routes,\n    matchPath,\n    instrumentPageLoad = true,\n    instrumentNavigation = true\n  } = options;\n  return {\n    ...integration,\n    afterAllSetup(client) {\n      integration.afterAllSetup(client);\n      const startPageloadCallback = startSpanOptions => {\n        startBrowserTracingPageLoadSpan(client, startSpanOptions);\n        return undefined;\n      };\n      const startNavigationCallback = startSpanOptions => {\n        startBrowserTracingNavigationSpan(client, startSpanOptions);\n        return undefined;\n      };\n\n      // eslint-disable-next-line deprecation/deprecation\n      const instrumentation = reactRouterV4Instrumentation(history, routes, matchPath);\n\n      // Now instrument page load & navigation with correct settings\n      instrumentation(startPageloadCallback, instrumentPageLoad, false);\n      instrumentation(startNavigationCallback, false, instrumentNavigation);\n    }\n  };\n}\n\n/**\n * A browser tracing integration that uses React Router v5 to instrument navigations.\n * Expects `history` (and optionally `routes` and `matchPath`) to be passed as options.\n */\nfunction reactRouterV5BrowserTracingIntegration(options) {\n  const integration = browserTracingIntegration({\n    ...options,\n    instrumentPageLoad: false,\n    instrumentNavigation: false\n  });\n  const {\n    history,\n    routes,\n    matchPath\n  } = options;\n  return {\n    ...integration,\n    afterAllSetup(client) {\n      integration.afterAllSetup(client);\n      const startPageloadCallback = startSpanOptions => {\n        startBrowserTracingPageLoadSpan(client, startSpanOptions);\n        return undefined;\n      };\n      const startNavigationCallback = startSpanOptions => {\n        startBrowserTracingNavigationSpan(client, startSpanOptions);\n        return undefined;\n      };\n\n      // eslint-disable-next-line deprecation/deprecation\n      const instrumentation = reactRouterV5Instrumentation(history, routes, matchPath);\n\n      // Now instrument page load & navigation with correct settings\n      instrumentation(startPageloadCallback, options.instrumentPageLoad, false);\n      instrumentation(startNavigationCallback, false, options.instrumentNavigation);\n    }\n  };\n}\n\n/**\n * @deprecated Use `browserTracingReactRouterV4()` instead.\n */\nfunction reactRouterV4Instrumentation(history, routes, matchPath) {\n  return createReactRouterInstrumentation(history, 'reactrouter_v4', routes, matchPath);\n}\n\n/**\n * @deprecated Use `browserTracingReactRouterV5()` instead.\n */\nfunction reactRouterV5Instrumentation(history, routes, matchPath) {\n  return createReactRouterInstrumentation(history, 'reactrouter_v5', routes, matchPath);\n}\nfunction createReactRouterInstrumentation(history, instrumentationName, allRoutes = [], matchPath) {\n  function getInitPathName() {\n    if (history && history.location) {\n      return history.location.pathname;\n    }\n    if (WINDOW && WINDOW.location) {\n      return WINDOW.location.pathname;\n    }\n    return undefined;\n  }\n\n  /**\n   * Normalizes a transaction name. Returns the new name as well as the\n   * source of the transaction.\n   *\n   * @param pathname The initial pathname we normalize\n   */\n  function normalizeTransactionName(pathname) {\n    if (allRoutes.length === 0 || !matchPath) {\n      return [pathname, 'url'];\n    }\n    const branches = matchRoutes(allRoutes, pathname, matchPath);\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let x = 0; x < branches.length; x++) {\n      if (branches[x].match.isExact) {\n        return [branches[x].match.path, 'route'];\n      }\n    }\n    return [pathname, 'url'];\n  }\n  return (customStartTransaction, startTransactionOnPageLoad = true, startTransactionOnLocationChange = true) => {\n    const initPathName = getInitPathName();\n    if (startTransactionOnPageLoad && initPathName) {\n      const [name, source] = normalizeTransactionName(initPathName);\n      activeTransaction = customStartTransaction({\n        name,\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: `auto.pageload.react.${instrumentationName}`,\n          [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source\n        }\n      });\n    }\n    if (startTransactionOnLocationChange && history.listen) {\n      history.listen((location, action) => {\n        if (action && (action === 'PUSH' || action === 'POP')) {\n          if (activeTransaction) {\n            activeTransaction.end();\n          }\n          const [name, source] = normalizeTransactionName(location.pathname);\n          activeTransaction = customStartTransaction({\n            name,\n            attributes: {\n              [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'navigation',\n              [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: `auto.navigation.react.${instrumentationName}`,\n              [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source\n            }\n          });\n        }\n      });\n    }\n  };\n}\n\n/**\n * Matches a set of routes to a pathname\n * Based on implementation from\n */\nfunction matchRoutes(routes, pathname, matchPath, branch = []) {\n  routes.some(route => {\n    const match = route.path ? matchPath(pathname, route) : branch.length ? branch[branch.length - 1].match // use parent match\n    : computeRootMatch(pathname); // use default \"root\" match\n\n    if (match) {\n      branch.push({\n        route,\n        match\n      });\n      if (route.routes) {\n        matchRoutes(route.routes, pathname, matchPath, branch);\n      }\n    }\n    return !!match;\n  });\n  return branch;\n}\nfunction computeRootMatch(pathname) {\n  return {\n    path: '/',\n    url: '/',\n    params: {},\n    isExact: pathname === '/'\n  };\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\nfunction withSentryRouting(Route) {\n  const componentDisplayName = Route.displayName || Route.name;\n  const activeRootSpan = getActiveRootSpan();\n  const WrappedRoute = props => {\n    if (activeRootSpan && props && props.computedMatch && props.computedMatch.isExact) {\n      activeRootSpan.updateName(props.computedMatch.path);\n      activeRootSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, 'route');\n    }\n\n    // @ts-expect-error Setting more specific React Component typing for `R` generic above\n    // will break advanced type inference done by react router params:\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/blob/13dc4235c069e25fe7ee16e11f529d909f9f3ff8/types/react-router/index.d.ts#L154-L164\n    return React.createElement(Route, {\n      ...props,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      }\n    });\n  };\n  WrappedRoute.displayName = `sentryRoute(${componentDisplayName})`;\n  hoistNonReactStatics(WrappedRoute, Route);\n  // @ts-expect-error Setting more specific React Component typing for `R` generic above\n  // will break advanced type inference done by react router params:\n  // https://github.com/DefinitelyTyped/DefinitelyTyped/blob/13dc4235c069e25fe7ee16e11f529d909f9f3ff8/types/react-router/index.d.ts#L154-L164\n  return WrappedRoute;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\n\nfunction getActiveRootSpan() {\n  // Legacy behavior for \"old\" react router instrumentation\n  if (activeTransaction) {\n    return activeTransaction;\n  }\n  const span = getActiveSpan();\n  const rootSpan = span ? getRootSpan(span) : undefined;\n  if (!rootSpan) {\n    return undefined;\n  }\n  const op = spanToJSON(rootSpan).op;\n\n  // Only use this root span if it is a pageload or navigation span\n  return op === 'navigation' || op === 'pageload' ? rootSpan : undefined;\n}\nexport { reactRouterV4BrowserTracingIntegration, reactRouterV4Instrumentation, reactRouterV5BrowserTracingIntegration, reactRouterV5Instrumentation, withSentryRouting };","map":{"version":3,"names":["_jsxFileName","activeTransaction","reactRouterV4BrowserTracingIntegration","options","integration","browserTracingIntegration","instrumentPageLoad","instrumentNavigation","history","routes","matchPath","afterAllSetup","client","startPageloadCallback","startSpanOptions","startBrowserTracingPageLoadSpan","undefined","startNavigationCallback","startBrowserTracingNavigationSpan","instrumentation","reactRouterV4Instrumentation","reactRouterV5BrowserTracingIntegration","reactRouterV5Instrumentation","createReactRouterInstrumentation","instrumentationName","allRoutes","getInitPathName","location","pathname","WINDOW","normalizeTransactionName","length","branches","matchRoutes","x","match","isExact","path","customStartTransaction","startTransactionOnPageLoad","startTransactionOnLocationChange","initPathName","name","source","attributes","SEMANTIC_ATTRIBUTE_SENTRY_OP","SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN","SEMANTIC_ATTRIBUTE_SENTRY_SOURCE","listen","action","end","branch","some","route","computeRootMatch","push","url","params","withSentryRouting","Route","componentDisplayName","displayName","activeRootSpan","getActiveRootSpan","WrappedRoute","props","computedMatch","updateName","setAttribute","React","createElement","__self","__source","fileName","lineNumber","hoistNonReactStatics","span","getActiveSpan","rootSpan","getRootSpan","op","spanToJSON"],"sources":["/Users/amandawarnakula/ParkwayLabs/TestApplications/error_handling/node_modules/@sentry/src/reactrouter.tsx"],"sourcesContent":["import {\n  WINDOW,\n  browserTracingIntegration,\n  startBrowserTracingNavigationSpan,\n  startBrowserTracingPageLoadSpan,\n} from '@sentry/browser';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  getActiveSpan,\n  getRootSpan,\n  spanToJSON,\n} from '@sentry/core';\nimport type { Integration, Span, StartSpanOptions, Transaction, TransactionSource } from '@sentry/types';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\n\nimport type { Action, Location, ReactRouterInstrumentation } from './types';\n\n// We need to disable eslint no-explict-any because any is required for the\n// react-router typings.\ntype Match = { path: string; url: string; params: Record<string, any>; isExact: boolean }; // eslint-disable-line @typescript-eslint/no-explicit-any\n\nexport type RouterHistory = {\n  location?: Location;\n  listen?(cb: (location: Location, action: Action) => void): void;\n} & Record<string, any>; // eslint-disable-line @typescript-eslint/no-explicit-any\n\nexport type RouteConfig = {\n  [propName: string]: unknown;\n  path?: string | string[];\n  exact?: boolean;\n  component?: JSX.Element;\n  routes?: RouteConfig[];\n};\n\nexport type MatchPath = (pathname: string, props: string | string[] | any, parent?: Match | null) => Match | null; // eslint-disable-line @typescript-eslint/no-explicit-any\n\ninterface ReactRouterOptions {\n  history: RouterHistory;\n  routes?: RouteConfig[];\n  matchPath?: MatchPath;\n}\n\nlet activeTransaction: Transaction | undefined;\n\n/**\n * A browser tracing integration that uses React Router v4 to instrument navigations.\n * Expects `history` (and optionally `routes` and `matchPath`) to be passed as options.\n */\nexport function reactRouterV4BrowserTracingIntegration(\n  options: Parameters<typeof browserTracingIntegration>[0] & ReactRouterOptions,\n): Integration {\n  const integration = browserTracingIntegration({\n    ...options,\n    instrumentPageLoad: false,\n    instrumentNavigation: false,\n  });\n\n  const { history, routes, matchPath, instrumentPageLoad = true, instrumentNavigation = true } = options;\n\n  return {\n    ...integration,\n    afterAllSetup(client) {\n      integration.afterAllSetup(client);\n\n      const startPageloadCallback = (startSpanOptions: StartSpanOptions): undefined => {\n        startBrowserTracingPageLoadSpan(client, startSpanOptions);\n        return undefined;\n      };\n\n      const startNavigationCallback = (startSpanOptions: StartSpanOptions): undefined => {\n        startBrowserTracingNavigationSpan(client, startSpanOptions);\n        return undefined;\n      };\n\n      // eslint-disable-next-line deprecation/deprecation\n      const instrumentation = reactRouterV4Instrumentation(history, routes, matchPath);\n\n      // Now instrument page load & navigation with correct settings\n      instrumentation(startPageloadCallback, instrumentPageLoad, false);\n      instrumentation(startNavigationCallback, false, instrumentNavigation);\n    },\n  };\n}\n\n/**\n * A browser tracing integration that uses React Router v5 to instrument navigations.\n * Expects `history` (and optionally `routes` and `matchPath`) to be passed as options.\n */\nexport function reactRouterV5BrowserTracingIntegration(\n  options: Parameters<typeof browserTracingIntegration>[0] & ReactRouterOptions,\n): Integration {\n  const integration = browserTracingIntegration({\n    ...options,\n    instrumentPageLoad: false,\n    instrumentNavigation: false,\n  });\n\n  const { history, routes, matchPath } = options;\n\n  return {\n    ...integration,\n    afterAllSetup(client) {\n      integration.afterAllSetup(client);\n\n      const startPageloadCallback = (startSpanOptions: StartSpanOptions): undefined => {\n        startBrowserTracingPageLoadSpan(client, startSpanOptions);\n        return undefined;\n      };\n\n      const startNavigationCallback = (startSpanOptions: StartSpanOptions): undefined => {\n        startBrowserTracingNavigationSpan(client, startSpanOptions);\n        return undefined;\n      };\n\n      // eslint-disable-next-line deprecation/deprecation\n      const instrumentation = reactRouterV5Instrumentation(history, routes, matchPath);\n\n      // Now instrument page load & navigation with correct settings\n      instrumentation(startPageloadCallback, options.instrumentPageLoad, false);\n      instrumentation(startNavigationCallback, false, options.instrumentNavigation);\n    },\n  };\n}\n\n/**\n * @deprecated Use `browserTracingReactRouterV4()` instead.\n */\nexport function reactRouterV4Instrumentation(\n  history: RouterHistory,\n  routes?: RouteConfig[],\n  matchPath?: MatchPath,\n): ReactRouterInstrumentation {\n  return createReactRouterInstrumentation(history, 'reactrouter_v4', routes, matchPath);\n}\n\n/**\n * @deprecated Use `browserTracingReactRouterV5()` instead.\n */\nexport function reactRouterV5Instrumentation(\n  history: RouterHistory,\n  routes?: RouteConfig[],\n  matchPath?: MatchPath,\n): ReactRouterInstrumentation {\n  return createReactRouterInstrumentation(history, 'reactrouter_v5', routes, matchPath);\n}\n\nfunction createReactRouterInstrumentation(\n  history: RouterHistory,\n  instrumentationName: string,\n  allRoutes: RouteConfig[] = [],\n  matchPath?: MatchPath,\n): ReactRouterInstrumentation {\n  function getInitPathName(): string | undefined {\n    if (history && history.location) {\n      return history.location.pathname;\n    }\n\n    if (WINDOW && WINDOW.location) {\n      return WINDOW.location.pathname;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Normalizes a transaction name. Returns the new name as well as the\n   * source of the transaction.\n   *\n   * @param pathname The initial pathname we normalize\n   */\n  function normalizeTransactionName(pathname: string): [string, TransactionSource] {\n    if (allRoutes.length === 0 || !matchPath) {\n      return [pathname, 'url'];\n    }\n\n    const branches = matchRoutes(allRoutes, pathname, matchPath);\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let x = 0; x < branches.length; x++) {\n      if (branches[x].match.isExact) {\n        return [branches[x].match.path, 'route'];\n      }\n    }\n\n    return [pathname, 'url'];\n  }\n\n  return (customStartTransaction, startTransactionOnPageLoad = true, startTransactionOnLocationChange = true): void => {\n    const initPathName = getInitPathName();\n\n    if (startTransactionOnPageLoad && initPathName) {\n      const [name, source] = normalizeTransactionName(initPathName);\n      activeTransaction = customStartTransaction({\n        name,\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: `auto.pageload.react.${instrumentationName}`,\n          [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n        },\n      });\n    }\n\n    if (startTransactionOnLocationChange && history.listen) {\n      history.listen((location, action) => {\n        if (action && (action === 'PUSH' || action === 'POP')) {\n          if (activeTransaction) {\n            activeTransaction.end();\n          }\n\n          const [name, source] = normalizeTransactionName(location.pathname);\n          activeTransaction = customStartTransaction({\n            name,\n            attributes: {\n              [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'navigation',\n              [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: `auto.navigation.react.${instrumentationName}`,\n              [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n            },\n          });\n        }\n      });\n    }\n  };\n}\n\n/**\n * Matches a set of routes to a pathname\n * Based on implementation from\n */\nfunction matchRoutes(\n  routes: RouteConfig[],\n  pathname: string,\n  matchPath: MatchPath,\n  branch: Array<{ route: RouteConfig; match: Match }> = [],\n): Array<{ route: RouteConfig; match: Match }> {\n  routes.some(route => {\n    const match = route.path\n      ? matchPath(pathname, route)\n      : branch.length\n        ? branch[branch.length - 1].match // use parent match\n        : computeRootMatch(pathname); // use default \"root\" match\n\n    if (match) {\n      branch.push({ route, match });\n\n      if (route.routes) {\n        matchRoutes(route.routes, pathname, matchPath, branch);\n      }\n    }\n\n    return !!match;\n  });\n\n  return branch;\n}\n\nfunction computeRootMatch(pathname: string): Match {\n  return { path: '/', url: '/', params: {}, isExact: pathname === '/' };\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\nexport function withSentryRouting<P extends Record<string, any>, R extends React.ComponentType<P>>(Route: R): R {\n  const componentDisplayName = (Route as any).displayName || (Route as any).name;\n\n  const activeRootSpan = getActiveRootSpan();\n\n  const WrappedRoute: React.FC<P> = (props: P) => {\n    if (activeRootSpan && props && props.computedMatch && props.computedMatch.isExact) {\n      activeRootSpan.updateName(props.computedMatch.path);\n      activeRootSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, 'route');\n    }\n\n    // @ts-expect-error Setting more specific React Component typing for `R` generic above\n    // will break advanced type inference done by react router params:\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/blob/13dc4235c069e25fe7ee16e11f529d909f9f3ff8/types/react-router/index.d.ts#L154-L164\n    return <Route {...props} />;\n  };\n\n  WrappedRoute.displayName = `sentryRoute(${componentDisplayName})`;\n  hoistNonReactStatics(WrappedRoute, Route);\n  // @ts-expect-error Setting more specific React Component typing for `R` generic above\n  // will break advanced type inference done by react router params:\n  // https://github.com/DefinitelyTyped/DefinitelyTyped/blob/13dc4235c069e25fe7ee16e11f529d909f9f3ff8/types/react-router/index.d.ts#L154-L164\n  return WrappedRoute;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\n\nfunction getActiveRootSpan(): Span | undefined {\n  // Legacy behavior for \"old\" react router instrumentation\n  if (activeTransaction) {\n    return activeTransaction;\n  }\n\n  const span = getActiveSpan();\n  const rootSpan = span ? getRootSpan(span) : undefined;\n\n  if (!rootSpan) {\n    return undefined;\n  }\n\n  const op = spanToJSON(rootSpan).op;\n\n  // Only use this root span if it is a pageload or navigation span\n  return op === 'navigation' || op === 'pageload' ? rootSpan : undefined;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}