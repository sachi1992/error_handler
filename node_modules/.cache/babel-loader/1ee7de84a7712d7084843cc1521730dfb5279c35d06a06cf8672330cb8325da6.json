{"ast":null,"code":"var _jsxFileName = \"/Users/amandawarnakula/ParkwayLabs/TestApplications/error_handling/src/errorHandler/form_error/CForm.tsx\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { ErrorHandler } from \"../boundary_error\";\nimport { CFormValidationFunction } from \"./ValidateCForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CForm = ({\n  isImportSubmit = false,\n  inputConfig = [],\n  initialValueObject = {\n    loginUserName: \"\",\n    organizationNumber: \"\",\n    address: \"\",\n    city: \"\",\n    phoneNumber: \"\",\n    did: \"\",\n    emailAddress: \"\",\n    userType: \"\"\n  },\n  submitButtonName = \"Submit\",\n  onSubmit\n}) => {\n  const validationSchema = CFormValidationFunction(inputConfig);\n  return /*#__PURE__*/_jsxDEV(ErrorHandler, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValueObject,\n      validationSchema: validationSchema,\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        if (onSubmit != null) {\n          onSubmit(values);\n        } else {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [inputConfig.map(config => {\n          var _config$options, _config$inputType, _config$placeholder;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: config.name,\n              children: config.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), config.inputType === \"select\" ? /*#__PURE__*/_jsxDEV(Field, {\n              as: \"select\",\n              name: config.name,\n              style: {\n                width: \"100%\",\n                padding: \"5px\",\n                border: \"2px solid green\",\n                borderRadius: \"10px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: `Select ${config.label}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this), (_config$options = config.options) === null || _config$options === void 0 ? void 0 : _config$options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.name\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Field, {\n              type: (_config$inputType = config.inputType) !== null && _config$inputType !== void 0 ? _config$inputType : \"text\",\n              name: config.name,\n              placeholder: (_config$placeholder = config.placeholder) !== null && _config$placeholder !== void 0 ? _config$placeholder : \"\",\n              style: {\n                width: \"100%\",\n                padding: \"5px\",\n                border: \"2px solid green\",\n                borderRadius: \"10px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: config.name,\n              component: \"div\",\n              className: \"text-red-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)]\n          }, config.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this);\n        }), !isImportSubmit && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: submitButtonName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c = CForm;\nexport default CForm;\nvar _c;\n$RefreshReg$(_c, \"CForm\");","map":{"version":3,"names":["Formik","Form","Field","ErrorMessage","ErrorHandler","CFormValidationFunction","jsxDEV","_jsxDEV","CForm","isImportSubmit","inputConfig","initialValueObject","loginUserName","organizationNumber","address","city","phoneNumber","did","emailAddress","userType","submitButtonName","onSubmit","validationSchema","children","initialValues","values","setSubmitting","alert","JSON","stringify","isSubmitting","map","config","_config$options","_config$inputType","_config$placeholder","htmlFor","name","label","fileName","_jsxFileName","lineNumber","columnNumber","inputType","as","style","width","padding","border","borderRadius","value","options","option","type","placeholder","component","className","disabled","_c","$RefreshReg$"],"sources":["/Users/amandawarnakula/ParkwayLabs/TestApplications/error_handling/src/errorHandler/form_error/CForm.tsx"],"sourcesContent":["import { Formik, Form, Field, ErrorMessage } from \"formik\";\n\nimport { ErrorHandler } from \"../boundary_error\";\nimport {\n  CFormValidationFunction,\n  IInputConfig,\n  IOptionSelect,\n} from \"./ValidateCForm\";\n\ntype CFormProps = {\n  isImportSubmit?: boolean;\n  inputConfig: IInputConfig[];\n  initialValueObject?: any;\n  submitButtonName?: string;\n  onSubmit?: (values: any) => void;\n};\n\nconst CForm = ({\n  isImportSubmit = false,\n  inputConfig = [],\n  initialValueObject = {\n    loginUserName: \"\",\n    organizationNumber: \"\",\n    address: \"\",\n    city: \"\",\n    phoneNumber: \"\",\n    did: \"\",\n    emailAddress: \"\",\n    userType: \"\",\n  },\n  submitButtonName = \"Submit\",\n  onSubmit,\n}: CFormProps): JSX.Element => {\n  const validationSchema = CFormValidationFunction(inputConfig);\n\n  return (\n    <ErrorHandler>\n      <Formik\n        initialValues={initialValueObject}\n        validationSchema={validationSchema}\n        onSubmit={(values, { setSubmitting }) => {\n          if (onSubmit != null) {\n            onSubmit(values);\n          } else {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n          }\n        }}>\n        {({ isSubmitting }) => (\n          <Form>\n            {inputConfig.map((config: IInputConfig) => (\n              <div key={config.name}>\n                <label htmlFor={config.name}>{config.label}</label>\n                {config.inputType === \"select\" ? (\n                  <Field\n                    as=\"select\"\n                    name={config.name}\n                    style={{\n                      width: \"100%\",\n                      padding: \"5px\",\n                      border: \"2px solid green\",\n                      borderRadius: \"10px\",\n                    }}>\n                    <option value=\"\">{`Select ${config.label}`}</option>\n                    {config.options?.map((option: IOptionSelect) => (\n                      <option key={option.value} value={option.value}>\n                        {option.name}\n                      </option>\n                    ))}\n                  </Field>\n                ) : (\n                  <Field\n                    type={config.inputType ?? \"text\"}\n                    name={config.name}\n                    placeholder={config.placeholder ?? \"\"}\n                    style={{\n                      width: \"100%\",\n                      padding: \"5px\",\n                      border: \"2px solid green\",\n                      borderRadius: \"10px\",\n                    }}\n                  />\n                )}\n\n                <ErrorMessage\n                  name={config.name}\n                  component=\"div\"\n                  className=\"text-red-500\"\n                />\n              </div>\n            ))}\n\n            {!isImportSubmit && (\n              <button type=\"submit\" disabled={isSubmitting}>\n                {submitButtonName}\n              </button>\n            )}\n          </Form>\n        )}\n      </Formik>\n\n      {/* <Formik\n        initialValues={{\n          loginUserName: '',\n          organizationNumber: '',\n          address: '',\n          city: '',\n          phoneNumber: '',\n          did: '',\n          emailAddress: '',\n          userType: ''\n        }}\n        validationSchema={validationSchema}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2))\n            setSubmitting(false)\n          }, 400)\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <div>\n              <label htmlFor=\"loginUserName\">Username</label>\n              <Field\n                type=\"text\"\n                name=\"loginUserName\"\n                style={{\n                  width: '100%',\n                  padding: '5px',\n                  border: '2px solid green',\n                  borderRadius: '10px'\n                }}\n              />\n              <ErrorMessage\n                name=\"loginUserName\"\n                component=\"div\"\n                className=\"text-danger-dark\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"organizationNumber\">Organization Number</label>\n              <Field\n                type=\"text\"\n                name=\"organizationNumber\"\n                style={{\n                  width: '100%',\n                  padding: '5px',\n                  border: '2px solid green',\n                  borderRadius: '10px'\n                }}\n              />\n              <ErrorMessage\n                name=\"organizationNumber\"\n                component=\"div\"\n                className=\"text-danger-dark\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"address\">Address</label>\n              <Field\n                type=\"text\"\n                name=\"address\"\n                style={{\n                  width: '100%',\n                  padding: '5px',\n                  border: '2px solid green',\n                  borderRadius: '10px'\n                }}\n              />\n              <ErrorMessage\n                name=\"address\"\n                component=\"div\"\n                className=\"text-danger-dark\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"city\">City</label>\n              <Field\n                type=\"text\"\n                name=\"city\"\n                style={{\n                  width: '100%',\n                  padding: '5px',\n                  border: '2px solid green',\n                  borderRadius: '10px'\n                }}\n              />\n              <ErrorMessage\n                name=\"city\"\n                component=\"div\"\n                className=\"text-danger-dark\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"phoneNumber\">Phone Number</label>\n              <Field\n                type=\"text\"\n                name=\"phoneNumber\"\n                style={{\n                  width: '100%',\n                  padding: '5px',\n                  border: '2px solid green',\n                  borderRadius: '10px'\n                }}\n              />\n              <ErrorMessage\n                name=\"phoneNumber\"\n                component=\"div\"\n                className=\"text-danger-dark\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"did\">DID</label>\n              <Field\n                type=\"text\"\n                name=\"did\"\n                style={{\n                  width: '100%',\n                  padding: '5px',\n                  border: '2px solid green',\n                  borderRadius: '10px'\n                }}\n              />\n              <ErrorMessage\n                name=\"did\"\n                component=\"div\"\n                className=\"text-danger-dark\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"emailAddress\">Email Address</label>\n              <Field\n                type=\"email\"\n                name=\"emailAddress\"\n                style={{\n                  width: '100%',\n                  padding: '5px',\n                  border: '2px solid green',\n                  borderRadius: '10px'\n                }}\n              />\n              <ErrorMessage\n                name=\"emailAddress\"\n                component=\"div\"\n                className=\"text-danger-dark\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"userType\">User Type</label>\n              <Field\n                as=\"select\"\n                name=\"userType\"\n                style={{\n                  width: '100%',\n                  padding: '5px',\n                  border: '2px solid green',\n                  borderRadius: '10px'\n                }}\n              >\n                <option value=\"\">Select User Type</option>\n                <option value=\"admin\">Admin</option>\n                <option value=\"client\">Client</option>\n                <option value=\"user\">User</option>\n              </Field>\n              <ErrorMessage\n                name=\"userType\"\n                component=\"div\"\n                className=\"text-danger-dark\" // Make sure this class has appropriate styles\n              />\n            </div>\n\n            <button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </button>\n          </Form>\n        )}\n      </Formik> */}\n    </ErrorHandler>\n  );\n};\n\nexport default CForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}