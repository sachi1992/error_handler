{"ast":null,"code":"/**\n * Creates a cache that evicts keys in fifo order\n * @param size {Number}\n */\nfunction makeFifoCache(size) {\n  // Maintain a fifo queue of keys, we cannot rely on Object.keys as the browser may not support it.\n  let evictionOrder = [];\n  let cache = {};\n  return {\n    add(key, value) {\n      while (evictionOrder.length >= size) {\n        // shift is O(n) but this is small size and only happens if we are\n        // exceeding the cache size so it should be fine.\n        const evictCandidate = evictionOrder.shift();\n        if (evictCandidate !== undefined) {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete cache[evictCandidate];\n        }\n      }\n\n      // in case we have a collision, delete the old key.\n      if (cache[key]) {\n        this.delete(key);\n      }\n      evictionOrder.push(key);\n      cache[key] = value;\n    },\n    clear() {\n      cache = {};\n      evictionOrder = [];\n    },\n    get(key) {\n      return cache[key];\n    },\n    size() {\n      return evictionOrder.length;\n    },\n    // Delete cache key and return true if it existed, false otherwise.\n    delete(key) {\n      if (!cache[key]) {\n        return false;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete cache[key];\n      for (let i = 0; i < evictionOrder.length; i++) {\n        if (evictionOrder[i] === key) {\n          evictionOrder.splice(i, 1);\n          break;\n        }\n      }\n      return true;\n    }\n  };\n}\nexport { makeFifoCache };","map":{"version":3,"names":["makeFifoCache","size","evictionOrder","cache","add","key","value","length","evictCandidate","shift","undefined","delete","push","clear","get","i","splice"],"sources":["/Users/amandawarnakula/ParkwayLabs/TestApplications/error_handling/node_modules/@sentry/src/cache.ts"],"sourcesContent":["/**\n * Creates a cache that evicts keys in fifo order\n * @param size {Number}\n */\nexport function makeFifoCache<Key extends string, Value>(\n  size: number,\n): {\n  get: (key: Key) => Value | undefined;\n  add: (key: Key, value: Value) => void;\n  delete: (key: Key) => boolean;\n  clear: () => void;\n  size: () => number;\n} {\n  // Maintain a fifo queue of keys, we cannot rely on Object.keys as the browser may not support it.\n  let evictionOrder: Key[] = [];\n  let cache: Record<string, Value> = {};\n\n  return {\n    add(key: Key, value: Value) {\n      while (evictionOrder.length >= size) {\n        // shift is O(n) but this is small size and only happens if we are\n        // exceeding the cache size so it should be fine.\n        const evictCandidate = evictionOrder.shift();\n\n        if (evictCandidate !== undefined) {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete cache[evictCandidate];\n        }\n      }\n\n      // in case we have a collision, delete the old key.\n      if (cache[key]) {\n        this.delete(key);\n      }\n\n      evictionOrder.push(key);\n      cache[key] = value;\n    },\n    clear() {\n      cache = {};\n      evictionOrder = [];\n    },\n    get(key: Key): Value | undefined {\n      return cache[key];\n    },\n    size() {\n      return evictionOrder.length;\n    },\n    // Delete cache key and return true if it existed, false otherwise.\n    delete(key: Key): boolean {\n      if (!cache[key]) {\n        return false;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete cache[key];\n\n      for (let i = 0; i < evictionOrder.length; i++) {\n        if (evictionOrder[i] === key) {\n          evictionOrder.splice(i, 1);\n          break;\n        }\n      }\n\n      return true;\n    },\n  };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACO,SAASA,aAAaA,CAC3BC,IAAI,EAOJ;EACF;EACE,IAAIC,aAAa,GAAU,EAAE;EAC7B,IAAIC,KAAK,GAA0B,EAAE;EAErC,OAAO;IACLC,GAAGA,CAACC,GAAG,EAAOC,KAAK,EAAS;MAC1B,OAAOJ,aAAa,CAACK,MAAO,IAAGN,IAAI,EAAE;QAC3C;QACA;QACQ,MAAMO,cAAe,GAAEN,aAAa,CAACO,KAAK,EAAE;QAE5C,IAAID,cAAe,KAAIE,SAAS,EAAE;UAC1C;UACU,OAAOP,KAAK,CAACK,cAAc,CAAC;QACtC;MACA;;MAEA;MACM,IAAIL,KAAK,CAACE,GAAG,CAAC,EAAE;QACd,IAAI,CAACM,MAAM,CAACN,GAAG,CAAC;MACxB;MAEMH,aAAa,CAACU,IAAI,CAACP,GAAG,CAAC;MACvBF,KAAK,CAACE,GAAG,IAAIC,KAAK;IACxB,CAAK;IACDO,KAAKA,CAAA,EAAG;MACNV,KAAA,GAAQ,EAAE;MACVD,aAAA,GAAgB,EAAE;IACxB,CAAK;IACDY,GAAGA,CAACT,GAAG,EAA0B;MAC/B,OAAOF,KAAK,CAACE,GAAG,CAAC;IACvB,CAAK;IACDJ,IAAIA,CAAA,EAAG;MACL,OAAOC,aAAa,CAACK,MAAM;IACjC,CAAK;IACL;IACII,MAAMA,CAACN,GAAG,EAAgB;MACxB,IAAI,CAACF,KAAK,CAACE,GAAG,CAAC,EAAE;QACf,OAAO,KAAK;MACpB;;MAEA;MACM,OAAOF,KAAK,CAACE,GAAG,CAAC;MAEjB,KAAK,IAAIU,CAAA,GAAI,CAAC,EAAEA,CAAE,GAAEb,aAAa,CAACK,MAAM,EAAEQ,CAAC,EAAE,EAAE;QAC7C,IAAIb,aAAa,CAACa,CAAC,CAAE,KAAIV,GAAG,EAAE;UAC5BH,aAAa,CAACc,MAAM,CAACD,CAAC,EAAE,CAAC,CAAC;UAC1B;QACV;MACA;MAEM,OAAO,IAAI;IACjB;EACA,CAAG;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}