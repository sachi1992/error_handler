{"ast":null,"code":"var _jsxFileName = \"/Users/amandawarnakula/ParkwayLabs/TestApplications/error_handling/src/errorHandler/boundary_error/ErrorHandler.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport ErrorFallback from \"./ErrorFallback\";\nimport * as Sentry from \"@sentry/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ErrorHandler = ({\n  children\n}) => {\n  _s();\n  const [errorType, setErrorType] = useState(null);\n  const errorHandler = (error, errorInfo) => {\n    console.log(\"ðŸš€ ~~ errorInfo, error\", errorInfo, error);\n    if (Boolean(error.message.includes(\"is undefined\")) || Boolean(error.message.includes(\"is null\"))) {\n      setErrorType(\"nullOrUndefined\");\n    } else if (error instanceof SyntaxError) {\n      setErrorType(\"syntaxError\");\n    } else if (typeof error.message === \"string\" && Boolean(error.message.includes(\"Type\"))) {\n      setErrorType(\"typeError\");\n    } else if (error.type === \"formValidation\") {\n      setErrorType(\"formValidation\");\n    } else {\n      console.error(\"Error caught by TypeMismatchErrorBoundary:\", error, errorInfo, \">>>>>>>>>\", error.message);\n      setErrorType(\"other\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Sentry.ErrorBoundary, {\n      // fallback={<div>Something went wrong</div>} // same function\n      // FallbackComponent={(err) => (\n      //   <ErrorFallback error={err.error} errorType={errorType ?? ''} />\n      // )}\n      // onError={errorHandler}\n      fallback: ErrorFallback\n      // showDialog\n      ,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(ErrorHandler, \"+HEMNv5516Irn5a3unFD7vmlZX8=\");\n_c = ErrorHandler;\nexport default ErrorHandler;\nvar _c;\n$RefreshReg$(_c, \"ErrorHandler\");","map":{"version":3,"names":["useState","ErrorFallback","Sentry","jsxDEV","_jsxDEV","ErrorHandler","children","_s","errorType","setErrorType","errorHandler","error","errorInfo","console","log","Boolean","message","includes","SyntaxError","type","ErrorBoundary","fallback","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/amandawarnakula/ParkwayLabs/TestApplications/error_handling/src/errorHandler/boundary_error/ErrorHandler.tsx"],"sourcesContent":["import { ReactNode, useState } from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport ErrorFallback from \"./ErrorFallback\";\nimport * as Sentry from \"@sentry/react\";\n\ntype IPropErrorHandler = {\n  children: ReactNode;\n};\n\nexport const ErrorHandler = ({ children }: IPropErrorHandler): JSX.Element => {\n  const [errorType, setErrorType] = useState<string | null>(null);\n\n  const errorHandler = (error: any, errorInfo: any): void => {\n    console.log(\"ðŸš€ ~~ errorInfo, error\", errorInfo, error);\n\n    if (\n      Boolean(error.message.includes(\"is undefined\")) ||\n      Boolean(error.message.includes(\"is null\"))\n    ) {\n      setErrorType(\"nullOrUndefined\");\n    } else if (error instanceof SyntaxError) {\n      setErrorType(\"syntaxError\");\n    } else if (\n      typeof error.message === \"string\" &&\n      Boolean(error.message.includes(\"Type\"))\n    ) {\n      setErrorType(\"typeError\");\n    } else if (error.type === \"formValidation\") {\n      setErrorType(\"formValidation\");\n    } else {\n      console.error(\n        \"Error caught by TypeMismatchErrorBoundary:\",\n        error,\n        errorInfo,\n        \">>>>>>>>>\",\n        error.message\n      );\n\n      setErrorType(\"other\");\n    }\n  };\n\n  return (\n    <div>\n      {/* <ErrorBoundary\n        // fallback={<div>Something went wrong</div>} // same function\n        FallbackComponent={(err) => (\n          <ErrorFallback error={err.error} errorType={errorType ?? \"\"} />\n        )}\n        onError={errorHandler}>\n        {children}\n      </ErrorBoundary> */}\n      <Sentry.ErrorBoundary\n        // fallback={<div>Something went wrong</div>} // same function\n        // FallbackComponent={(err) => (\n        //   <ErrorFallback error={err.error} errorType={errorType ?? ''} />\n        // )}\n        // onError={errorHandler}\n        fallback={ErrorFallback}\n        // showDialog\n      >\n        {children}\n      </Sentry.ErrorBoundary>\n    </div>\n  );\n};\n\nexport default ErrorHandler;\n"],"mappings":";;AAAA,SAAoBA,QAAQ,QAAQ,OAAO;AAE3C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAO,KAAKC,MAAM,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMxC,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAA4B,CAAC,KAAkB;EAAAC,EAAA;EAC5E,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAgB,IAAI,CAAC;EAE/D,MAAMU,YAAY,GAAGA,CAACC,KAAU,EAAEC,SAAc,KAAW;IACzDC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,SAAS,EAAED,KAAK,CAAC;IAEvD,IACEI,OAAO,CAACJ,KAAK,CAACK,OAAO,CAACC,QAAQ,CAAC,cAAc,CAAC,CAAC,IAC/CF,OAAO,CAACJ,KAAK,CAACK,OAAO,CAACC,QAAQ,CAAC,SAAS,CAAC,CAAC,EAC1C;MACAR,YAAY,CAAC,iBAAiB,CAAC;IACjC,CAAC,MAAM,IAAIE,KAAK,YAAYO,WAAW,EAAE;MACvCT,YAAY,CAAC,aAAa,CAAC;IAC7B,CAAC,MAAM,IACL,OAAOE,KAAK,CAACK,OAAO,KAAK,QAAQ,IACjCD,OAAO,CAACJ,KAAK,CAACK,OAAO,CAACC,QAAQ,CAAC,MAAM,CAAC,CAAC,EACvC;MACAR,YAAY,CAAC,WAAW,CAAC;IAC3B,CAAC,MAAM,IAAIE,KAAK,CAACQ,IAAI,KAAK,gBAAgB,EAAE;MAC1CV,YAAY,CAAC,gBAAgB,CAAC;IAChC,CAAC,MAAM;MACLI,OAAO,CAACF,KAAK,CACX,4CAA4C,EAC5CA,KAAK,EACLC,SAAS,EACT,WAAW,EACXD,KAAK,CAACK,OACR,CAAC;MAEDP,YAAY,CAAC,OAAO,CAAC;IACvB;EACF,CAAC;EAED,oBACEL,OAAA;IAAAE,QAAA,eASEF,OAAA,CAACF,MAAM,CAACkB,aAAa;MACnB;MACA;MACA;MACA;MACA;MACAC,QAAQ,EAAEpB;MACV;MAAA;MAAAK,QAAA,EAECA;IAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACW;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEV,CAAC;AAAClB,EAAA,CAxDWF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AA0DzB,eAAeA,YAAY;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}