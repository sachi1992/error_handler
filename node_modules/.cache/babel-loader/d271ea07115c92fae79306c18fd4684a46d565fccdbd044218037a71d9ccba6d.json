{"ast":null,"code":"var _jsxFileName = \"/Users/amandawarnakula/ParkwayLabs/TestApplications/error_handling/src/components/countingIssue/ex2.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useErrorBoundary } from 'react-error-boundary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Ex2 = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const maxCount = 5;\n  const {\n    showBoundary\n  } = useErrorBoundary();\n  const handleClick = () => {\n    try {\n      if (count === maxCount) {\n        throw new Error('max count');\n      } else {\n        setCount(c => c + 1);\n      }\n    } catch (error) {\n      showBoundary(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [count, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \" count \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Ex2, \"d2Dtn/JpNpZPMWV0R8/oUoOG0MM=\", false, function () {\n  return [useErrorBoundary];\n});\n_c = Ex2;\nexport default Ex2;\nvar _c;\n$RefreshReg$(_c, \"Ex2\");","map":{"version":3,"names":["useState","useErrorBoundary","jsxDEV","_jsxDEV","Ex2","_s","count","setCount","maxCount","showBoundary","handleClick","Error","c","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/amandawarnakula/ParkwayLabs/TestApplications/error_handling/src/components/countingIssue/ex2.tsx"],"sourcesContent":["import { useState } from 'react'\nimport { useErrorBoundary } from 'react-error-boundary'\n\nconst Ex2 = (): JSX.Element => {\n  const [count, setCount] = useState(0)\n\n  const maxCount = 5\n\n  const { showBoundary } = useErrorBoundary()\n\n  const handleClick = (): void => {\n    try {\n      if (count === maxCount) {\n        throw new Error('max count')\n      } else {\n        setCount((c) => c + 1)\n      }\n    } catch (error) {\n      showBoundary(error)\n    }\n  }\n\n  return (\n    <div>\n      {count}\n      <br />\n      <button onClick={handleClick}> count </button>\n    </div>\n  )\n}\n\nexport default Ex2\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,gBAAgB,QAAQ,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,GAAG,GAAGA,CAAA,KAAmB;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMQ,QAAQ,GAAG,CAAC;EAElB,MAAM;IAAEC;EAAa,CAAC,GAAGR,gBAAgB,CAAC,CAAC;EAE3C,MAAMS,WAAW,GAAGA,CAAA,KAAY;IAC9B,IAAI;MACF,IAAIJ,KAAK,KAAKE,QAAQ,EAAE;QACtB,MAAM,IAAIG,KAAK,CAAC,WAAW,CAAC;MAC9B,CAAC,MAAM;QACLJ,QAAQ,CAAEK,CAAC,IAAKA,CAAC,GAAG,CAAC,CAAC;MACxB;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdJ,YAAY,CAACI,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEV,OAAA;IAAAW,QAAA,GACGR,KAAK,eACNH,OAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNf,OAAA;MAAQgB,OAAO,EAAET,WAAY;MAAAI,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAAAb,EAAA,CA1BKD,GAAG;EAAA,QAKkBH,gBAAgB;AAAA;AAAAmB,EAAA,GALrChB,GAAG;AA4BT,eAAeA,GAAG;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}